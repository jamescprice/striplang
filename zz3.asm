--------------------------------------------------------------------
startup:
0801 : 0b __ __ INV
0802 : 08 __ __ PHP
0803 : 0a __ __ ASL
0804 : 00 __ __ BRK
0805 : 9e __ __ INV
0806 : 32 __ __ INV
0807 : 30 36 __ BMI $083f
0809 : 31 00 __ AND ($00),y 
080b : 00 __ __ BRK
080c : 00 __ __ BRK
080d : ba __ __ TSX
080e : 8e e6 2f STX $2fe6 ; (spentry + 0)
0811 : a9 07 __ LDA #$07
0813 : 85 19 __ STA IP + 0 
0815 : a9 30 __ LDA #$30
0817 : 85 1a __ STA IP + 1 
0819 : 38 __ __ SEC
081a : a9 31 __ LDA #$31
081c : e9 30 __ SBC #$30
081e : f0 0f __ BEQ $082f
0820 : aa __ __ TAX
0821 : a9 00 __ LDA #$00
0823 : a0 00 __ LDY #$00
0825 : 91 19 __ STA (IP + 0),y 
0827 : c8 __ __ INY
0828 : d0 fb __ BNE $0825
082a : e6 1a __ INC IP + 1 
082c : ca __ __ DEX
082d : d0 f6 __ BNE $0825
082f : 38 __ __ SEC
0830 : a9 09 __ LDA #$09
0832 : e9 07 __ SBC #$07
0834 : f0 08 __ BEQ $083e
0836 : a8 __ __ TAY
0837 : a9 00 __ LDA #$00
0839 : 88 __ __ DEY
083a : 91 19 __ STA (IP + 0),y 
083c : d0 fb __ BNE $0839
083e : a9 b4 __ LDA #$b4
0840 : 85 23 __ STA SP + 0 
0842 : a9 9f __ LDA #$9f
0844 : 85 24 __ STA SP + 1 
0846 : a9 6c __ LDA #$6c
0848 : 85 19 __ STA IP + 0 
084a : a9 08 __ LDA #$08
084c : 85 1a __ STA IP + 1 
084e : a0 00 __ LDY #$00
0850 : f0 03 __ BEQ $0855
0852 : a4 02 __ LDY $02 
0854 : c8 __ __ INY
0855 : b1 19 __ LDA (IP + 0),y 
0857 : 8d 5c 08 STA $085c ; (startup + 91)
085a : c8 __ __ INY
085b : 6c 00 09 JMP ($0900)
085e : 98 __ __ TYA
085f : a0 00 __ LDY #$00
0861 : 18 __ __ CLC
0862 : 65 19 __ ADC IP + 0 
0864 : 85 19 __ STA IP + 0 
0866 : 90 ed __ BCC $0855
0868 : e6 1a __ INC IP + 1 
086a : d0 e9 __ BNE $0855
086c : f2 __ __ INV
086d : 00 __ __ BRK
086e : 0a __ __ ASL
086f : 02 __ __ INV
0870 : a9 4c __ LDA #$4c
0872 : 85 54 __ STA $54 
0874 : a9 00 __ LDA #$00
0876 : 85 13 __ STA P6 
0878 : a9 19 __ LDA #$19
087a : 85 16 __ STA P9 
087c : 60 __ __ RTS
--------------------------------------------------------------------
spentry:
2fe6 : __ __ __ BYT 00                                              : .
--------------------------------------------------------------------
main:
0a00:	ENTER	4, 6
0a04:	PUSH	#$000A
0a07:	LEA	T0, $0cd3
0a0b:	LEA	T1, inputstring + 0
0a0f:	MOV	ADDR, T1
0a11:	MOV	ACCU, T0
0a13:	STRCPY
0a14:	MOV	4(SP), T1
0a17:	LEA	T0, $17d7
0a1b:	MOV	2(SP), T0
0a1e:	CALL	printf + 0
0a21:	CALL	parse_expr + 0
0a24:	MOV	2(SP), ACCU
0a27:	CALL	eval2 + 0
0a2a:	MOV	ADDR, ACCU
0a2c:	MOV	T2, 4(ADDR)
0a2f:	MOV	8(SP), T2
0a32:	MOV	T2, 2(ADDR)
0a35:	MOV	T0, 0(ADDR)
0a38:	MOV	6(SP), T2
0a3b:	MOV	4(SP), T0
0a3e:	LEA	T0, $208f
0a42:	MOV	2(SP), T0
0a45:	CALL	printf + 0
0a48:	LEA	T0, $209c
0a4c:	MOV	ADDR, T1
0a4e:	MOV	ACCU, T0
0a50:	STRCPY
0a51:	CALL	parse_expr + 0
0a54:	MOV	2(SP), ACCU
0a57:	CALL	eval2 + 0
0a5a:	MOV	T0, ACCU
0a5c:	MOV	4(SP), T1
0a5f:	LEA	T2, $20b3
0a63:	MOV	2(SP), T2
0a66:	CALL	printf + 0
0a69:	MOV	ADDR, T0
0a6b:	MOV	T2, 4(ADDR)
0a6e:	MOV	8(SP), T2
0a71:	MOV	T2, 2(ADDR)
0a74:	MOV	T0, 0(ADDR)
0a77:	MOV	6(SP), T2
0a7a:	MOV	4(SP), T0
0a7d:	LEA	T0, $20b8
0a81:	MOV	2(SP), T0
0a84:	CALL	printf + 0
0a87:	LEA	T0, $20c5
0a8b:	MOV	ADDR, T1
0a8d:	MOV	ACCU, T0
0a8f:	STRCPY
0a90:	CALL	parse_expr + 0
0a93:	MOV	2(SP), ACCU
0a96:	CALL	eval2 + 0
0a99:	MOV	T0, ACCU
0a9b:	MOV	4(SP), T1
0a9e:	LEA	T2, $20ed
0aa2:	MOV	2(SP), T2
0aa5:	CALL	printf + 0
0aa8:	MOV	ADDR, T0
0aaa:	MOV	T2, 4(ADDR)
0aad:	MOV	8(SP), T2
0ab0:	MOV	T2, 2(ADDR)
0ab3:	MOV	T0, 0(ADDR)
0ab6:	MOV	6(SP), T2
0ab9:	MOV	4(SP), T0
0abc:	LEA	T0, $20f2
0ac0:	MOV	2(SP), T0
0ac3:	CALL	printf + 0
0ac6:	LEA	T0, $20ff
0aca:	MOV	ADDR, T1
0acc:	MOV	ACCU, T0
0ace:	STRCPY
0acf:	CALL	parse_expr + 0
0ad2:	CALL	parse_expr + 0
0ad5:	MOV	2(SP), ACCU
0ad8:	CALL	eval2 + 0
0adb:	MOV	T0, ACCU
0add:	MOV	4(SP), T1
0ae0:	LEA	T2, $2118
0ae4:	MOV	2(SP), T2
0ae7:	CALL	printf + 0
0aea:	MOV	ADDR, T0
0aec:	MOV	T2, 4(ADDR)
0aef:	MOV	8(SP), T2
0af2:	NOP
0af3:	MOV	T2, 2(ADDR)
0af6:	MOV	T0, 0(ADDR)
0af9:	MOV	6(SP), T2
0afc:	MOV	4(SP), T0
0aff:	LEA	T0, $211d
0b03:	MOV	2(SP), T0
0b06:	CALL	printf + 0
0b09:	LEA	T0, $212b
0b0d:	MOV	ADDR, T1
0b0f:	MOV	ACCU, T0
0b11:	STRCPY
0b12:	CALL	parse_expr + 0
0b15:	CALL	parse_expr + 0
0b18:	MOV	2(SP), ACCU
0b1b:	CALL	eval2 + 0
0b1e:	MOV	T0, ACCU
0b20:	MOV	4(SP), T1
0b23:	LEA	T2, $2144
0b27:	MOV	2(SP), T2
0b2a:	CALL	printf + 0
0b2d:	MOV	ADDR, T0
0b2f:	MOV	T2, 4(ADDR)
0b32:	MOV	8(SP), T2
0b35:	MOV	T2, 2(ADDR)
0b38:	MOV	T0, 0(ADDR)
0b3b:	MOV	6(SP), T2
0b3e:	MOV	4(SP), T0
0b41:	LEA	T0, $2149
0b45:	MOV	2(SP), T0
0b48:	CALL	printf + 0
0b4b:	LEA	T0, $2156
0b4f:	MOV	ADDR, T1
0b51:	MOV	ACCU, T0
0b53:	STRCPY
0b54:	CALL	parse_expr + 0
0b57:	CALL	parse_expr + 0
0b5a:	MOV	2(SP), ACCU
0b5d:	CALL	eval2 + 0
0b60:	MOV	T0, ACCU
0b62:	MOV	4(SP), T1
0b65:	LEA	T2, $2171
0b69:	MOV	2(SP), T2
0b6c:	CALL	printf + 0
0b6f:	MOV	ADDR, T0
0b71:	MOV	T2, 4(ADDR)
0b74:	MOV	8(SP), T2
0b77:	MOV	T2, 2(ADDR)
0b7a:	MOV	T0, 0(ADDR)
0b7d:	MOV	6(SP), T2
0b80:	MOV	4(SP), T0
0b83:	LEA	T0, $2176
0b87:	MOV	2(SP), T0
0b8a:	CALL	printf + 0
0b8d:	LEA	T0, $2183
0b91:	MOV	ADDR, T1
0b93:	MOV	ACCU, T0
0b95:	STRCPY
0b96:	CALL	parse_expr + 0
0b99:	MOV	2(SP), ACCU
0b9c:	CALL	eval2 + 0
0b9f:	MOV	T0, ACCU
0ba1:	MOV	4(SP), T1
0ba4:	LEA	T2, $219c
0ba8:	MOV	2(SP), T2
0bab:	CALL	printf + 0
0bae:	MOV	ADDR, T0
0bb0:	MOV	T2, 4(ADDR)
0bb3:	MOV	8(SP), T2
0bb6:	MOV	T2, 2(ADDR)
0bb9:	MOV	T0, 0(ADDR)
0bbc:	MOV	6(SP), T2
0bbf:	MOV	4(SP), T0
0bc2:	LEA	T0, $21a0
0bc6:	MOV	2(SP), T0
0bc9:	CALL	printf + 0
0bcc:	LEA	T0, $21ae
0bd0:	MOV	ADDR, T1
0bd2:	MOV	ACCU, T0
0bd4:	STRCPY
0bd5:	MOV	4(SP), T1
0bd8:	LEA	T0, $21c7
0bdc:	MOV	2(SP), T0
0bdf:	CALL	printf + 0
0be2:	CALL	parse_expr + 0
0be5:	NOP
0be6:	CALL	parse_expr + 0
0be9:	MOV	2(SP), ACCU
0bec:	CALL	eval2 + 0
0bef:	MOV	ADDR, ACCU
0bf1:	MOV	T2, 4(ADDR)
0bf4:	MOV	8(SP), T2
0bf7:	MOV	T2, 2(ADDR)
0bfa:	MOV	T0, 0(ADDR)
0bfd:	MOV	6(SP), T2
0c00:	MOV	4(SP), T0
0c03:	LEA	T0, $21cb
0c07:	MOV	2(SP), T0
0c0a:	CALL	printf + 0
0c0d:	LEA	T0, $21d9
0c11:	MOV	ADDR, T1
0c13:	MOV	ACCU, T0
0c15:	STRCPY
0c16:	MOV	4(SP), T1
0c19:	LEA	T0, $21f0
0c1d:	MOV	2(SP), T0
0c20:	CALL	printf + 0
0c23:	CALL	parse_expr + 0
0c26:	CALL	parse_expr + 0
0c29:	MOV	2(SP), ACCU
0c2c:	CALL	eval2 + 0
0c2f:	MOV	ADDR, ACCU
0c31:	MOV	T2, 4(ADDR)
0c34:	MOV	8(SP), T2
0c37:	MOV	T2, 2(ADDR)
0c3a:	MOV	T0, 0(ADDR)
0c3d:	MOV	6(SP), T2
0c40:	MOV	4(SP), T0
0c43:	LEA	T0, $21f4
0c47:	MOV	2(SP), T0
0c4a:	CALL	printf + 0
0c4d:	LEA	T0, $2202
0c51:	MOV	ADDR, T1
0c53:	MOV	ACCU, T0
0c55:	STRCPY
0c56:	MOV	4(SP), T1
0c59:	LEA	T0, $2229
0c5d:	MOV	2(SP), T0
0c60:	CALL	printf + 0
0c63:	CALL	parse_expr + 0
0c66:	MOV	2(SP), ACCU
0c69:	CALL	eval2 + 0
0c6c:	MOV	ADDR, ACCU
0c6e:	MOV	T2, 4(ADDR)
0c71:	MOV	8(SP), T2
0c74:	MOV	T2, 2(ADDR)
0c77:	MOV	T0, 0(ADDR)
0c7a:	MOV	6(SP), T2
0c7d:	MOV	4(SP), T0
0c80:	LEA	T0, $222d
0c84:	MOV	2(SP), T0
0c87:	CALL	printf + 0
0c8a:	LEA	T0, $223b
0c8e:	MOV	ADDR, T1
0c90:	MOV	ACCU, T0
0c92:	STRCPY
0c93:	MOV	4(SP), T1
0c96:	LEA	T0, $2262
0c9a:	MOV	2(SP), T0
0c9d:	CALL	printf + 0
0ca0:	CALL	parse_expr + 0
0ca3:	MOV	2(SP), ACCU
0ca6:	CALL	eval2 + 0
0ca9:	MOV	ADDR, ACCU
0cab:	MOV	T1, 4(ADDR)
0cae:	MOV	8(SP), T1
0cb1:	MOV	T1, 2(ADDR)
0cb4:	MOV	T0, 0(ADDR)
0cb7:	MOV	6(SP), T1
0cba:	MOV	4(SP), T0
0cbd:	LEA	T0, $2266
0cc1:	MOV	2(SP), T0
0cc4:	CALL	printf + 0
0cc7:	LEA	T0, $2274
0ccb:	MOV	2(SP), T0
0cce:	CALL	printf + 0
0cd1:	JUMP	$0CD1
--------------------------------------------------------------------
inputstring:
3007 : __ __ __ BSS	250
--------------------------------------------------------------------
0cd3 : __ __ __ BYT 32 20 33 20 34 2b 34 20 35 20 36 20 2a 20 32 20 : 2 3 4+4 5 6 * 2 
0ce3 : __ __ __ BYT 33 20 34 2e 00                                  : 3 4..
--------------------------------------------------------------------
printf:
0ce8:	ENTER	0, 2
0cec:	PUSH	#$0009
0cef:	MOV	ACCU, #1
0cf2:	MOVB	8(SP), ACCU
0cf5:	LEA	T0, buff + 0
0cf9:	MOV	2(SP), T0
0cfc:	MOV	T0, 2(FP)
0cff:	MOV	4(SP), T0
0d02:	LEA	T0, 4(FP)
0d06:	MOV	6(SP), T0
0d09:	CALL	sformat + 0
0d0c:	POP	#$0009
0d0f:	RETURN	0, 2
--------------------------------------------------------------------
sformat:
0d13:	ENTER	9, 11
0d17:	PUSH	#$000B
0d1a:	MOV	T0, 2(FP)
0d1d:	MOVB	T1, #0
0d20:	MOV	T2, 4(FP)
0d23:	MOV	ADDR, T2
0d25:	MOVB	T3, 0(ADDR)
0d28:	MOVB	ACCU, T3
0d2a:	BEQF	$0E74
0d2d:	ADD	T2, #$0001
0d31:	MOVB	ACCU, T3
0d33:	CMPUB	ACCU, #$0025
0d35:	BNEF	$1095
0d38:	MOVB	ACCU, T1
0d3a:	BEQ	$0D5D
0d3c:	MOVB	ACCU, T1
0d3e:	MOV	T5, ACCU
0d40:	MOVB	T1, #0
0d43:	MOVUB	ACCU, 8(FP)
0d46:	BNE	$0D4E
0d48:	MOV	ACCU, T5
0d4a:	ADD	T0, ACCU
0d4c:	JUMP	$0D5D
0d4e:	MOV	ACCU, T0
0d50:	MOV	P0, ACCU
0d52:	LEAX	ADDR, T5 + ACCU
0d54:	MOV	ACCU, #0
0d57:	MOVB	0(ADDR), ACCU
0d5a:	CALL	puts + 0
0d5d:	MOV	ADDR, T2
0d5f:	MOVB	T5, 0(ADDR)
0d62:	MOV	ACCU, #32
0d65:	MOVB	si + 0, ACCU
0d69:	MOV	ACCU, #0
0d6c:	MOVB	si + 1, ACCU
0d70:	MOV	ACCU, #255
0d73:	MOVB	si + 2, ACCU
0d77:	MOV	ACCU, #10
0d7a:	MOV	si + 3, ACCU
0d7e:	MOV	ACCU, #0
0d81:	MOVB	si + 5, ACCU
0d85:	MOVB	si + 6, ACCU
0d89:	MOVB	si + 7, ACCU
0d8d:	ADD	T2, #$0001
0d91:	MOVB	ACCU, T5
0d93:	CMPUB	ACCU, #$002B
0d95:	BEQF	$108C
0d98:	MOVB	ACCU, T5
0d9a:	CMPUB	ACCU, #$0030
0d9c:	BEQF	$1083
0d9f:	MOVB	ACCU, T5
0da1:	CMPUB	ACCU, #$0023
0da3:	BEQF	$107A
0da6:	MOVB	ACCU, T5
0da8:	CMPUB	ACCU, #$002D
0daa:	BEQF	$106B
0dad:	MOVB	ACCU, T5
0daf:	CMPUB	ACCU, #$0030
0db1:	BGT	$0DE6
0db3:	MOVB	ACCU, T5
0db5:	CMPUB	ACCU, #$0039
0db7:	BLT	$0DE6
0db9:	MOV	T6, #0
0dbc:	MOVB	ACCU, T5
0dbe:	CMPUB	ACCU, #$0039
0dc0:	BLT	$0DE2
0dc2:	AND	T5, #$00FF
0dc6:	MUL	T6, #10
0dc9:	MOV	ACCU, T6
0dcb:	ADD	ACCU, T5
0dcd:	ADD	ACCU, #$FFD0
0dd1:	MOV	T6, ACCU
0dd3:	MOV	ADDR, T2
0dd5:	MOVB	T5, 0(ADDR)
0dd8:	ADD	T2, #$0001
0ddc:	MOVB	ACCU, T5
0dde:	CMPUB	ACCU, #$0030
0de0:	BLE	$0DBC
0de2:	MOVB	si + 1, T6
0de6:	MOVB	ACCU, T5
0de8:	CMPUB	ACCU, #$002E
0dea:	BNE	$0E1B
0dec:	MOV	T6, #0
0def:	MOV	ADDR, T2
0df1:	MOVB	T5, 0(ADDR)
0df4:	ADD	T2, #$0001
0df8:	MOVB	ACCU, T5
0dfa:	CMPUB	ACCU, #$0030
0dfc:	BGT	$0E17
0dfe:	MOVB	ACCU, T5
0e00:	CMPUB	ACCU, #$0039
0e02:	BLT	$0E17
0e04:	AND	T5, #$00FF
0e08:	MUL	T6, #10
0e0b:	MOV	ACCU, T6
0e0d:	ADD	ACCU, T5
0e0f:	ADD	ACCU, #$FFD0
0e13:	MOV	T6, ACCU
0e15:	JUMP	$0DEF
0e17:	MOVB	si + 2, T6
0e1b:	MOVB	ACCU, T5
0e1d:	CMPUB	ACCU, #$0064
0e1f:	BEQF	$1062
0e22:	MOVB	ACCU, T5
0e24:	CMPUB	ACCU, #$0075
0e26:	BEQF	$1059
0e29:	MOVB	ACCU, T5
0e2b:	CMPUB	ACCU, #$0078
0e2d:	BEQF	$102E
0e30:	MOVB	ACCU, T5
0e32:	CMPUB	ACCU, #$006C
0e34:	BEQF	$0FA8
0e37:	MOVB	ACCU, T5
0e39:	CMPUB	ACCU, #$0066
0e3b:	BEQF	$0F81
0e3e:	MOVB	ACCU, T5
0e40:	CMPUB	ACCU, #$0067
0e42:	BEQF	$0F81
0e45:	MOVB	ACCU, T5
0e47:	CMPUB	ACCU, #$0065
0e49:	BEQF	$0F81
0e4c:	MOVB	ACCU, T5
0e4e:	CMPUB	ACCU, #$0073
0e50:	BEQ	$0EB6
0e52:	MOVB	ACCU, T5
0e54:	CMPUB	ACCU, #$0063
0e56:	BEQ	$0EA3
0e58:	MOVB	ACCU, T5
0e5a:	BEQ	$0E66
0e5c:	MOVB	ACCU, T1
0e5e:	LEAX	ADDR, T0 + ACCU
0e60:	MOVB	0(ADDR), T5
0e63:	ADDB	T1, #$0001
0e66:	MOV	ADDR, T2
0e68:	MOVB	T3, 0(ADDR)
0e6b:	ADD	T2, #$0001
0e6f:	MOVB	ACCU, T3
0e71:	BNEF	$0D31
0e74:	MOVB	ACCU, T1
0e76:	ADD	ACCU, T0
0e78:	MOV	T2, ACCU
0e7a:	MOV	ACCU, #0
0e7d:	MOV	ADDR, T2
0e7f:	MOVB	0(ADDR), ACCU
0e82:	MOVB	ACCU, T1
0e84:	BNE	$0E8F
0e86:	MOV	ACCU, T0
0e88:	POP	#$000B
0e8b:	RETURN	9, 11
0e8f:	MOVUB	ACCU, 8(FP)
0e92:	BNE	$0E98
0e94:	MOV	ACCU, T2
0e96:	JUMP	$0E88
0e98:	MOV	ACCU, T0
0e9a:	MOV	P0, ACCU
0e9c:	CALL	puts + 0
0e9f:	MOV	ACCU, T0
0ea1:	JUMP	$0E88
0ea3:	MOV	T5, 6(FP)
0ea6:	MOV	ACCU, T5
0ea8:	MOV	ADDR, T5
0eaa:	MOV	T5, 0(ADDR)
0ead:	ADD	ACCU, #$0002
0eb1:	MOV	6(FP), ACCU
0eb4:	JUMP	$0E5C
0eb6:	MOV	T5, 6(FP)
0eb9:	MOV	ACCU, T5
0ebb:	MOV	ADDR, T5
0ebd:	MOV	T5, 0(ADDR)
0ec0:	ADD	ACCU, #$0002
0ec4:	MOV	6(FP), ACCU
0ec7:	MOVB	T3, #0
0eca:	MOVUB	ACCU, si + 1
0ece:	BEQ	$0EDE
0ed0:	MOVB	ACCU, T3
0ed2:	LEAX	ADDR, T5 + ACCU
0ed4:	MOVUB	ACCU, 0(ADDR)
0ed7:	BEQ	$0EDE
0ed9:	ADDB	T3, #$0001
0edc:	JUMP	$0ED0
0ede:	MOVUB	ACCU, si + 6
0ee2:	BNE	$0F03
0ee4:	MOVUB	ACCU, si + 1
0ee8:	CMPUB	ACCU, T3
0eea:	BGE	$0F03
0eec:	MOVB	ACCU, T1
0eee:	ADD	ACCU, T0
0ef0:	MOV	T6, ACCU
0ef2:	MOVB	T4, si + 0
0ef6:	MOV	ADDR, T6
0ef8:	MOVB	0(ADDR), T4
0efb:	ADDB	T3, #$0001
0efe:	ADDB	T1, #$0001
0f01:	JUMP	$0EE4
0f03:	MOVUB	ACCU, 8(FP)
0f06:	BEQ	$0F5B
0f08:	MOVB	ACCU, T1
0f0a:	BNE	$0F15
0f0c:	MOV	ACCU, T5
0f0e:	MOV	P0, ACCU
0f10:	CALL	puts + 0
0f13:	JUMP	$0F34
0f15:	MOV	ACCU, T0
0f17:	MOV	P0, ACCU
0f19:	AND	T1, #$00FF
0f1d:	MOV	ACCU, T0
0f1f:	LEAX	ADDR, T1 + ACCU
0f21:	MOV	ACCU, #0
0f24:	MOVB	0(ADDR), ACCU
0f27:	CALL	puts + 0
0f2a:	MOV	ACCU, T5
0f2c:	MOV	P0, ACCU
0f2e:	CALL	puts + 0
0f31:	MOVB	T1, #0
0f34:	MOVUB	ACCU, si + 6
0f38:	BEQF	$0E66
0f3b:	MOVUB	ACCU, si + 1
0f3f:	CMPUB	ACCU, T3
0f41:	BGEF	$0E66
0f44:	MOVB	ACCU, T1
0f46:	ADD	ACCU, T0
0f48:	MOV	T5, ACCU
0f4a:	MOVB	T4, si + 0
0f4e:	MOV	ADDR, T5
0f50:	MOVB	0(ADDR), T4
0f53:	ADDB	T3, #$0001
0f56:	ADDB	T1, #$0001
0f59:	JUMP	$0F3B
0f5b:	MOV	ADDR, T5
0f5d:	MOVB	T4, 0(ADDR)
0f60:	MOVB	ACCU, T4
0f62:	BEQ	$0F34
0f64:	ADD	T5, #$0001
0f68:	MOVB	ACCU, T1
0f6a:	LEAX	ADDR, T0 + ACCU
0f6c:	MOVB	0(ADDR), T4
0f6f:	ADDB	T1, #$0001
0f72:	MOV	ADDR, T5
0f74:	MOVB	T4, 0(ADDR)
0f77:	ADD	T5, #$0001
0f7b:	MOVB	ACCU, T4
0f7d:	BNE	$0F68
0f7f:	JUMP	$0F34
0f81:	MOV	4(SP), T0
0f84:	MOVB	10(SP), T5
0f87:	LEA	T1, si + 0
0f8b:	MOV	2(SP), T1
0f8e:	MOV	T5, 6(FP)
0f91:	MOV	ADDR, T5
0f93:	MOVD	T7, 0(ADDR)
0f96:	MOVD	6(SP), T7
0f99:	CALL	nformf + 0
0f9c:	MOV	T1, ACCU
0f9e:	ADD	T5, #$0004
0fa2:	MOV	6(FP), T5
0fa5:	JUMPF	$0E66
0fa8:	MOV	T5, 6(FP)
0fab:	MOV	ADDR, T5
0fad:	MOVD	T7, 0(ADDR)
0fb0:	ADD	T5, #$0004
0fb4:	MOV	6(FP), T5
0fb7:	MOV	ACCU, T2
0fb9:	MOV	T5, ACCU
0fbb:	MOV	ADDR, T2
0fbd:	MOVB	T3, 0(ADDR)
0fc0:	MOVB	ACCU, T3
0fc2:	CMPUB	ACCU, #$0064
0fc4:	BEQ	$1021
0fc6:	MOVB	ACCU, T3
0fc8:	CMPUB	ACCU, #$0075
0fca:	BEQ	$1007
0fcc:	ADD	T2, #$0001
0fd0:	MOVB	ACCU, T3
0fd2:	CMPUB	ACCU, #$0078
0fd4:	BNEF	$0E66
0fd7:	MOV	ACCU, T0
0fd9:	MOV	P2, ACCU
0fdb:	MOVD	ACCU, T7
0fdd:	MOVD	P4, ACCU
0fdf:	MOVB	P8, #0
0fe2:	MOV	ACCU, #16
0fe5:	MOV	si + 3, ACCU
0fe9:	LEA	P0, si + 0
0fed:	CALL	nforml + 0
0ff0:	MOV	T1, ACCU
0ff2:	MOV	ACCU, T5
0ff4:	ADD	ACCU, #$0002
0ff8:	MOV	T2, ACCU
0ffa:	MOV	ADDR, T5
0ffc:	MOVB	T3, 1(ADDR)
0fff:	MOVB	ACCU, T3
1001:	BNEF	$0D31
1004:	JUMPF	$0E74
1007:	MOV	ACCU, T0
1009:	MOV	P2, ACCU
100b:	MOVD	ACCU, T7
100d:	MOVD	P4, ACCU
100f:	MOVB	P8, #0
1012:	LEA	P0, si + 0
1016:	CALL	nforml + 0
1019:	MOV	T1, ACCU
101b:	ADD	T2, #$0002
101f:	JUMP	$0FFA
1021:	MOV	ACCU, T0
1023:	MOV	P2, ACCU
1025:	MOVD	ACCU, T7
1027:	MOVD	P4, ACCU
1029:	MOVB	P8, #1
102c:	JUMP	$1012
102e:	MOV	ACCU, T0
1030:	MOV	P2, ACCU
1032:	MOVB	P6, #0
1035:	MOV	ACCU, #16
1038:	MOV	si + 3, ACCU
103c:	MOV	T1, 6(FP)
103f:	MOV	ACCU, T1
1041:	MOV	ADDR, T1
1043:	MOV	P4, 0(ADDR)
1046:	ADD	ACCU, #$0002
104a:	MOV	6(FP), ACCU
104d:	LEA	P0, si + 0
1051:	CALL	nformi + 0
1054:	MOV	T1, ACCU
1056:	JUMPF	$0E66
1059:	MOV	ACCU, T0
105b:	MOV	P2, ACCU
105d:	MOVB	P6, #0
1060:	JUMP	$103C
1062:	MOV	ACCU, T0
1064:	MOV	P2, ACCU
1066:	MOVB	P6, #1
1069:	JUMP	$103C
106b:	MOV	ACCU, #1
106e:	MOVB	si + 6, ACCU
1072:	MOV	ADDR, T2
1074:	MOVB	T5, 0(ADDR)
1077:	JUMPF	$0D8D
107a:	MOV	ACCU, #1
107d:	MOVB	si + 7, ACCU
1081:	JUMP	$1072
1083:	MOV	ACCU, #48
1086:	MOVB	si + 0, ACCU
108a:	JUMP	$1072
108c:	MOV	ACCU, #1
108f:	MOVB	si + 5, ACCU
1093:	JUMP	$1072
1095:	MOVB	ACCU, T1
1097:	LEAX	ADDR, T0 + ACCU
1099:	MOVB	0(ADDR), T3
109c:	LOOPB	T1, #$28
109f:	BGTF	$0E66
10a2:	MOVB	ACCU, T1
10a4:	MOV	T5, ACCU
10a6:	MOVB	T1, #0
10a9:	MOVUB	ACCU, 8(FP)
10ac:	BNE	$10B5
10ae:	MOV	ACCU, T5
10b0:	ADD	T0, ACCU
10b2:	JUMPF	$0E66
10b5:	MOV	ACCU, T0
10b7:	MOV	P0, ACCU
10b9:	LEAX	ADDR, T5 + ACCU
10bb:	MOV	ACCU, #0
10be:	MOVB	0(ADDR), ACCU
10c1:	CALL	puts + 0
10c4:	JUMPF	$0E66
--------------------------------------------------------------------
puts:
10c7:	ENTER	0, 2
10cb:	JSR	$10d2
10ce:	RETURN	0, 2
--------------------------------------------------------------------
10d2 : a0 00 __ LDY #$00
10d4 : b1 0d __ LDA (P0),y 
10d6 : f0 0b __ BEQ $10e3
10d8 : 20 e4 10 JSR $10e4 ; (putpch + 0)
10db : e6 0d __ INC P0 
10dd : d0 f3 __ BNE $10d2
10df : e6 0e __ INC P1 
10e1 : d0 ef __ BNE $10d2
10e3 : 60 __ __ RTS
--------------------------------------------------------------------
putpch:
10e4 : ae e7 2f LDX $2fe7 ; (giocharmap + 0)
10e7 : e0 01 __ CPX #$01
10e9 : 90 26 __ BCC $1111
10eb : c9 0a __ CMP #$0a
10ed : d0 02 __ BNE $10f1
10ef : a9 0d __ LDA #$0d
10f1 : c9 09 __ CMP #$09
10f3 : f0 1f __ BEQ $1114
10f5 : e0 02 __ CPX #$02
10f7 : 90 18 __ BCC $1111
10f9 : c9 41 __ CMP #$41
10fb : 90 14 __ BCC $1111
10fd : c9 7b __ CMP #$7b
10ff : b0 10 __ BCS $1111
1101 : c9 61 __ CMP #$61
1103 : b0 04 __ BCS $1109
1105 : c9 5b __ CMP #$5b
1107 : b0 08 __ BCS $1111
1109 : 49 20 __ EOR #$20
110b : e0 03 __ CPX #$03
110d : f0 02 __ BEQ $1111
110f : 29 df __ AND #$df
1111 : 4c d2 ff JMP $ffd2 
1114 : 38 __ __ SEC
1115 : 20 f0 ff JSR $fff0 
1118 : 98 __ __ TYA
1119 : 29 03 __ AND #$03
111b : 49 03 __ EOR #$03
111d : aa __ __ TAX
111e : a9 20 __ LDA #$20
1120 : 20 d2 ff JSR $ffd2 
1123 : ca __ __ DEX
1124 : 10 fa __ BPL $1120
1126 : 60 __ __ RTS
--------------------------------------------------------------------
giocharmap:
2fe7 : __ __ __ BYT 01                                              : .
--------------------------------------------------------------------
nformi:
1127:	ENTER	0, 2
112b:	MOV	ACCU, P4
112d:	MOV	T0, ACCU
112f:	MOV	T1, ACCU
1131:	MOVB	T2, #0
1134:	MOVB	ACCU, P6
1136:	BEQ	$113D
1138:	MOV	ACCU, T0
113a:	BLTF	$1287
113d:	MOVB	T3, #16
1140:	MOV	ACCU, T0
1142:	BEQ	$1174
1144:	MOV	ACCU, P0
1146:	MOV	T0, ACCU
1148:	MOV	ADDR, T0
114a:	MOV	T5, 3(ADDR)
114d:	MOV	ACCU, T1
114f:	MODU	ACCU, T5
1151:	MOV	T6, ACCU
1153:	CMPS	ACCU, #$000A
1156:	BLE	$115E
1158:	ADD	T6, #$0030
115c:	JUMP	$1162
115e:	ADD	T6, #$0037
1162:	ADDB	T3, #$00FF
1165:	LEAXB	ADDR, buffer + 0 + T3
1169:	MOVB	0(ADDR), T6
116c:	MOV	ACCU, T1
116e:	DIVU	ACCU, T5
1170:	MOV	T1, ACCU
1172:	BNE	$1148
1174:	MOV	ACCU, P0
1176:	MOV	T0, ACCU
1178:	MOV	ADDR, T0
117a:	MOVB	T4, 2(ADDR)
117d:	MOVB	ACCU, T4
117f:	CMPUB	ACCU, #$00FF
1181:	BNE	$1188
1183:	MOV	T1, #15
1186:	JUMP	$1190
1188:	MOVB	ACCU, T4
118a:	MOV	T1, ACCU
118c:	SUBR	T1, #$0010
1190:	MOVB	ACCU, T1
1192:	CMPUB	ACCU, T3
1194:	BLE	$11A9
1196:	ADDB	T3, #$00FF
1199:	LEAXB	ADDR, buffer + 0 + T3
119d:	MOV	ACCU, #48
11a0:	MOVB	0(ADDR), ACCU
11a3:	MOVB	ACCU, T1
11a5:	CMPUB	ACCU, T3
11a7:	BGT	$1196
11a9:	MOV	ADDR, T0
11ab:	MOVUB	ACCU, 7(ADDR)
11ae:	BEQ	$11CF
11b0:	MOV	ACCU, 3(ADDR)
11b3:	CMPU	ACCU, #$0010
11b6:	BNE	$11CF
11b8:	LEAXB	ADDR, si + 7 + T3
11bc:	MOV	ACCU, #88
11bf:	MOVB	0(ADDR), ACCU
11c2:	ADDB	T3, #$00FE
11c5:	LEAXB	ADDR, buffer + 0 + T3
11c9:	MOV	ACCU, #48
11cc:	MOVB	0(ADDR), ACCU
11cf:	MOVB	T4, #0
11d2:	MOVB	ACCU, T2
11d4:	BNEF	$1277
11d7:	MOV	ADDR, T0
11d9:	MOVUB	ACCU, 5(ADDR)
11dc:	BEQ	$11EB
11de:	ADDB	T3, #$00FF
11e1:	LEAXB	ADDR, buffer + 0 + T3
11e5:	MOV	ACCU, #43
11e8:	MOVB	0(ADDR), ACCU
11eb:	MOV	ADDR, T0
11ed:	MOVUB	ACCU, 6(ADDR)
11f0:	BEQ	$1234
11f2:	MOVB	ACCU, T3
11f4:	CMPUB	ACCU, #$0010
11f6:	BLE	$1212
11f8:	MOV	ACCU, P2
11fa:	MOV	T1, ACCU
11fc:	MOVB	ACCU, T4
11fe:	LEAXB	ADDR, buffer + 0 + T3
1202:	MOVB	T2, 0(ADDR)
1205:	LEAX	ADDR, T1 + ACCU
1207:	MOVB	0(ADDR), T2
120a:	ADDB	T4, #$0001
120d:	LOOPB	T3, #$10
1210:	BGT	$11FC
1212:	MOV	ADDR, T0
1214:	MOVUB	ACCU, 1(ADDR)
1217:	CMPUB	ACCU, T4
1219:	BGE	$122E
121b:	MOVB	ACCU, T4
121d:	MOV	T1, ACCU
121f:	MOV	ACCU, P2
1221:	MOVB	T2, 0(ADDR)
1224:	LEAX	ADDR, T1 + ACCU
1226:	MOVB	0(ADDR), T2
1229:	ADDB	T4, #$0001
122c:	JUMP	$1212
122e:	MOVB	ACCU, T4
1230:	RETURN	0, 2
1234:	MOV	ADDR, T0
1236:	MOVUB	T1, 1(ADDR)
1239:	MOVB	ACCU, T3
123b:	ADD	ACCU, T1
123d:	CMPU	ACCU, #$0010
1240:	BGE	$1255
1242:	ADDB	T3, #$00FF
1245:	MOVB	ACCU, T3
1247:	LEA	T1, buffer + 0
124b:	MOVB	T2, 0(ADDR)
124e:	LEAX	ADDR, T1 + ACCU
1250:	MOVB	0(ADDR), T2
1253:	JUMP	$1234
1255:	MOVB	ACCU, T3
1257:	CMPUB	ACCU, #$0010
1259:	BLE	$122E
125b:	MOV	ACCU, P2
125d:	MOV	T0, ACCU
125f:	MOVB	ACCU, T4
1261:	LEAXB	ADDR, buffer + 0 + T3
1265:	MOVB	T2, 0(ADDR)
1268:	LEAX	ADDR, T0 + ACCU
126a:	MOVB	0(ADDR), T2
126d:	ADDB	T4, #$0001
1270:	LOOPB	T3, #$10
1273:	BGT	$125F
1275:	JUMP	$122E
1277:	ADDB	T3, #$00FF
127a:	LEAXB	ADDR, buffer + 0 + T3
127e:	MOV	ACCU, #45
1281:	MOVB	0(ADDR), ACCU
1284:	JUMPF	$11EB
1287:	MOVB	T2, #1
128a:	MOVB	T3, #16
128d:	NEG	ACCU
128e:	MOV	T1, ACCU
1290:	BNEF	$1144
1293:	JUMPF	$1174
--------------------------------------------------------------------
nforml:
1296:	ENTER	8, 10
129a:	MOVD	ACCU, P4
129c:	MOVD	T0, ACCU
129e:	MOVD	T1, ACCU
12a0:	MOVB	T2, #0
12a3:	MOVB	ACCU, P8
12a5:	BEQ	$12B4
12a7:	MOVD	ACCU, #$00000000
12ad:	EXTRT	T0, inp_op_cmp_s32 + 0
12b1:	BLTF	$1420
12b4:	MOVB	T3, #16
12b7:	MOVD	ACCU, #$00000000
12bd:	EXTRT	T0, inp_op_cmp_u32 + 0
12c1:	BLE	$130D
12c3:	MOV	ACCU, P0
12c5:	MOV	T5, ACCU
12c7:	MOV	ADDR, T5
12c9:	MOV	ACCU, 3(ADDR)
12cc:	EXTRT	$00, inp_op_ext_u16 + 0
12d0:	MOVD	T0, ACCU
12d2:	MOVD	ACCU, T1
12d4:	EXTRT	T0, inp_binop_mod_u32 + 0
12d8:	MOVD	T7, ACCU
12da:	CMPS	ACCU, #$000A
12dd:	BLE	$12E7
12df:	MOV	ACCU, T7
12e1:	ADD	ACCU, #$0030
12e5:	JUMP	$12ED
12e7:	MOV	ACCU, T7
12e9:	ADD	ACCU, #$0037
12ed:	MOV	T6, ACCU
12ef:	ADDB	T3, #$00FF
12f2:	LEAXB	ADDR, buffer + 0 + T3
12f6:	MOVB	0(ADDR), T6
12f9:	MOVD	ACCU, T1
12fb:	EXTRT	T0, inp_binop_div_u32 + 0
12ff:	MOVD	T1, ACCU
1301:	MOVD	ACCU, #$00000000
1307:	EXTRT	T1, inp_op_cmp_u32 + 0
130b:	BGT	$12C7
130d:	MOV	ACCU, P0
130f:	MOV	T5, ACCU
1311:	MOV	ADDR, T5
1313:	MOVB	T4, 2(ADDR)
1316:	MOVB	ACCU, T4
1318:	CMPUB	ACCU, #$00FF
131a:	BNE	$1321
131c:	MOV	T6, #15
131f:	JUMP	$1329
1321:	MOVB	ACCU, T4
1323:	MOV	T6, ACCU
1325:	SUBR	T6, #$0010
1329:	MOVB	ACCU, T6
132b:	CMPUB	ACCU, T3
132d:	BLE	$1342
132f:	ADDB	T3, #$00FF
1332:	LEAXB	ADDR, buffer + 0 + T3
1336:	MOV	ACCU, #48
1339:	MOVB	0(ADDR), ACCU
133c:	MOVB	ACCU, T6
133e:	CMPUB	ACCU, T3
1340:	BGT	$132F
1342:	MOV	ADDR, T5
1344:	MOVUB	ACCU, 7(ADDR)
1347:	BEQ	$1368
1349:	MOV	ACCU, 3(ADDR)
134c:	CMPU	ACCU, #$0010
134f:	BNE	$1368
1351:	LEAXB	ADDR, si + 7 + T3
1355:	MOV	ACCU, #88
1358:	MOVB	0(ADDR), ACCU
135b:	ADDB	T3, #$00FE
135e:	LEAXB	ADDR, buffer + 0 + T3
1362:	MOV	ACCU, #48
1365:	MOVB	0(ADDR), ACCU
1368:	MOVB	T4, #0
136b:	MOVB	ACCU, T2
136d:	BNEF	$1410
1370:	MOV	ADDR, T5
1372:	MOVUB	ACCU, 5(ADDR)
1375:	BEQ	$1384
1377:	ADDB	T3, #$00FF
137a:	LEAXB	ADDR, buffer + 0 + T3
137e:	MOV	ACCU, #43
1381:	MOVB	0(ADDR), ACCU
1384:	MOV	ADDR, T5
1386:	MOVUB	ACCU, 6(ADDR)
1389:	BEQ	$13CD
138b:	MOVB	ACCU, T3
138d:	CMPUB	ACCU, #$0010
138f:	BLE	$13AB
1391:	MOV	ACCU, P2
1393:	MOV	T6, ACCU
1395:	MOVB	ACCU, T4
1397:	LEAXB	ADDR, buffer + 0 + T3
139b:	MOVB	T2, 0(ADDR)
139e:	LEAX	ADDR, T6 + ACCU
13a0:	MOVB	0(ADDR), T2
13a3:	ADDB	T4, #$0001
13a6:	LOOPB	T3, #$10
13a9:	BGT	$1395
13ab:	MOV	ADDR, T5
13ad:	MOVUB	ACCU, 1(ADDR)
13b0:	CMPUB	ACCU, T4
13b2:	BGE	$13C7
13b4:	MOVB	ACCU, T4
13b6:	MOV	T6, ACCU
13b8:	MOV	ACCU, P2
13ba:	MOVB	T2, 0(ADDR)
13bd:	LEAX	ADDR, T6 + ACCU
13bf:	MOVB	0(ADDR), T2
13c2:	ADDB	T4, #$0001
13c5:	JUMP	$13AB
13c7:	MOVB	ACCU, T4
13c9:	RETURN	8, 10
13cd:	MOV	ADDR, T5
13cf:	MOVUB	T6, 1(ADDR)
13d2:	MOVB	ACCU, T3
13d4:	ADD	ACCU, T6
13d6:	CMPU	ACCU, #$0010
13d9:	BGE	$13EE
13db:	ADDB	T3, #$00FF
13de:	MOVB	ACCU, T3
13e0:	LEA	T6, buffer + 0
13e4:	MOVB	T2, 0(ADDR)
13e7:	LEAX	ADDR, T6 + ACCU
13e9:	MOVB	0(ADDR), T2
13ec:	JUMP	$13CD
13ee:	MOVB	ACCU, T3
13f0:	CMPUB	ACCU, #$0010
13f2:	BLE	$13C7
13f4:	MOV	ACCU, P2
13f6:	MOV	T5, ACCU
13f8:	MOVB	ACCU, T4
13fa:	LEAXB	ADDR, buffer + 0 + T3
13fe:	MOVB	T2, 0(ADDR)
1401:	LEAX	ADDR, T5 + ACCU
1403:	MOVB	0(ADDR), T2
1406:	ADDB	T4, #$0001
1409:	LOOPB	T3, #$10
140c:	BGT	$13F8
140e:	JUMP	$13C7
1410:	ADDB	T3, #$00FF
1413:	LEAXB	ADDR, buffer + 0 + T3
1417:	MOV	ACCU, #45
141a:	MOVB	0(ADDR), ACCU
141d:	JUMPF	$1384
1420:	MOVB	T2, #1
1423:	MOVB	T3, #16
1426:	MOVD	ACCU, T0
1428:	EXTRT	$00, negaccu32 + 0
142c:	MOVD	T1, ACCU
142e:	MOVD	ACCU, #$00000000
1434:	EXTRT	T1, inp_op_cmp_u32 + 0
1438:	BGTF	$12C3
143b:	JUMPF	$130D
--------------------------------------------------------------------
nformf:
143e:	ENTER	9, 11
1442:	PUSH	#$0002
1445:	MOV	T0, 4(FP)
1448:	MOV	ACCU, T0
144a:	MOV	T1, ACCU
144c:	MOVD	T2, 6(FP)
144f:	MOVD	ACCU, #$00000000
1455:	CMPF	ACCU, T2
1457:	BLTF	$17A9
145a:	MOVD	ACCU, T2
145c:	MOVD	P0, ACCU
145e:	MOV	ADDR, 2(FP)
1461:	MOVUB	ACCU, 5(ADDR)
1464:	BEQF	$179A
1467:	MOV	ACCU, #43
146a:	MOV	ADDR, T0
146c:	MOVB	0(ADDR), ACCU
146f:	MOVB	T3, #1
1472:	MOV	T4, #1
1475:	MOV	T5, #2
1478:	MOV	T6, #3
147b:	CALL	isinf + 0
147e:	MOVB	ACCU, ACCU
1480:	BNEF	$1776
1483:	MOV	ADDR, 2(FP)
1486:	MOVB	T7, 2(ADDR)
1489:	MOVB	ACCU, T7
148b:	CMPUB	ACCU, #$00FF
148d:	BNE	$1494
148f:	MOV	T4, #6
1492:	JUMP	$1498
1494:	MOVB	ACCU, T7
1496:	MOV	T4, ACCU
1498:	MOVB	ACCU, T4
149a:	MOVB	T7, ACCU
149c:	MOV	T5, #0
149f:	MOVD	T2, 6(FP)
14a2:	MOVD	ACCU, #$00000000
14a8:	CMPF	ACCU, T2
14aa:	BEQ	$1518
14ac:	MOVD	T11, 6(FP)
14af:	MOVD	ACCU, #$447a0000
14b5:	CMPF	ACCU, T2
14b7:	BLT	$14CE
14b9:	MOVD	ACCU, T11
14bb:	MOVD	$03, #$447a0000
14c1:	DIVF	ACCU, $03
14c3:	MOVD	T2, ACCU
14c5:	MOVD	6(FP), T2
14c8:	ADD	T5, #$0003
14cc:	JUMP	$14AC
14ce:	MOVD	ACCU, T11
14d0:	MOVD	T2, ACCU
14d2:	MOVD	T11, 6(FP)
14d5:	MOVD	ACCU, #$3f800000
14db:	CMPF	ACCU, T2
14dd:	BGE	$14F4
14df:	MOVD	ACCU, T11
14e1:	MOVD	$03, #$447a0000
14e7:	MULF	ACCU, $03
14e9:	MOVD	T2, ACCU
14eb:	MOVD	6(FP), T2
14ee:	ADD	T5, #$FFFD
14f2:	JUMP	$14D2
14f4:	MOVD	ACCU, T11
14f6:	MOVD	T2, ACCU
14f8:	MOVD	ACCU, #$41200000
14fe:	CMPF	ACCU, T2
1500:	BLT	$1518
1502:	MOVD	ACCU, 6(FP)
1505:	MOVD	$03, #$41200000
150b:	DIVF	ACCU, $03
150d:	MOVD	T2, ACCU
150f:	MOVD	6(FP), T2
1512:	ADD	T5, #$0001
1516:	JUMP	$14F8
1518:	MOVB	ACCU, T4
151a:	MOV	T6, ACCU
151c:	ADD	T6, #$0001
1520:	MOVB	ACCU, T6
1522:	MOVB	T10, ACCU
1524:	MOVB	T8, 10(FP)
1527:	MOVB	ACCU, T8
1529:	CMPUB	ACCU, #$0065
152b:	NOT	ACCU
152c:	ANDB	ACCU, #$0001
152f:	MOVB	T9, ACCU
1531:	MOVB	T12, ACCU
1533:	MOVB	ACCU, T8
1535:	CMPUB	ACCU, #$0067
1537:	BEQF	$1765
153a:	MOVB	ACCU, T9
153c:	BNEF	$1722
153f:	MOV	ACCU, T5
1541:	BGE	$1557
1543:	MOVD	ACCU, 6(FP)
1546:	MOVD	$03, #$41200000
154c:	DIVF	ACCU, $03
154e:	MOVD	6(FP), ACCU
1551:	ADD	T5, #$0001
1555:	JUMP	$153F
1557:	MOVB	ACCU, T4
1559:	ADD	ACCU, T5
155b:	ADD	ACCU, #$0001
155f:	MOV	T10, ACCU
1561:	CMPUB	ACCU, #$0007
1563:	BGT	$156B
1565:	MOVD	T2, fround5 + 24
1569:	JUMP	$1576
156b:	MOV	ACCU, T10
156d:	SHL	ACCU, #2
156f:	LEAX	ADDR, inp_op_extrt + 20 + ACCU
1573:	MOVD	T2, 0(ADDR)
1576:	MOVD	ACCU, 6(FP)
1579:	ADDF	ACCU, T2
157b:	MOVD	T2, ACCU
157d:	MOVD	6(FP), T2
1580:	MOVD	ACCU, #$41200000
1586:	CMPF	ACCU, T2
1588:	BLT	$159F
158a:	MOVD	ACCU, 6(FP)
158d:	MOVD	$03, #$41200000
1593:	DIVF	ACCU, $03
1595:	MOVD	6(FP), ACCU
1598:	MOVB	ACCU, T4
159a:	ADDB	ACCU, #$00FF
159d:	MOVB	T7, ACCU
159f:	MOVB	ACCU, T10
15a1:	MOV	T4, ACCU
15a3:	MOVB	ACCU, T7
15a5:	NEG	ACCU
15a6:	ADD	ACCU, T4
15a8:	MOV	T4, ACCU
15aa:	MOVB	T7, ACCU
15ac:	MOVB	ACCU, T10
15ae:	CMPUB	ACCU, #$0014
15b0:	BGE	$15B5
15b2:	MOVB	T10, #20
15b5:	MOVB	ACCU, T4
15b7:	BNE	$15C6
15b9:	MOVB	ACCU, T3
15bb:	LEAX	ADDR, T0 + ACCU
15bd:	MOV	ACCU, #48
15c0:	MOVB	0(ADDR), ACCU
15c3:	ADDB	T3, #$0001
15c6:	MOVB	T8, #0
15c9:	MOVB	ACCU, T7
15cb:	CMPUB	ACCU, T8
15cd:	BNE	$15DC
15cf:	MOVB	ACCU, T3
15d1:	LEAX	ADDR, T1 + ACCU
15d3:	MOV	ACCU, #46
15d6:	MOVB	0(ADDR), ACCU
15d9:	ADDB	T3, #$0001
15dc:	MOVB	ACCU, T3
15de:	ADD	ACCU, T1
15e0:	MOV	T0, ACCU
15e2:	MOVB	ACCU, T8
15e4:	CMPUB	ACCU, #$0006
15e6:	BLT	$160D
15e8:	MOV	ADDR, T0
15ea:	MOVD	T2, 6(FP)
15ed:	MOVD	ACCU, T2
15ef:	CNVFS	ACCU
15f0:	MOV	T4, ACCU
15f2:	CNVSF	ACCU
15f3:	MOVD	T11, ACCU
15f5:	MOVD	ACCU, T2
15f7:	SUBF	ACCU, T11
15f9:	MOVD	$03, #$41200000
15ff:	MULF	ACCU, $03
1601:	MOVD	6(FP), ACCU
1604:	ADD	T4, #$0030
1608:	MOVB	0(ADDR), T4
160b:	JUMP	$1615
160d:	MOV	ACCU, #48
1610:	MOV	ADDR, T0
1612:	MOVB	0(ADDR), ACCU
1615:	ADDB	T3, #$0001
1618:	ADDB	T8, #$0001
161b:	MOVB	ACCU, T10
161d:	CMPUB	ACCU, T8
161f:	BLT	$15C9
1621:	MOVB	ACCU, T12
1623:	BNEF	$16BA
1626:	MOV	T0, 2(FP)
1629:	MOV	ADDR, T0
162b:	MOVUB	ACCU, 1(ADDR)
162e:	CMPUB	ACCU, T3
1630:	BLT	$163B
1632:	MOVB	ACCU, T3
1634:	POP	#$0002
1637:	RETURN	9, 11
163b:	MOVUB	ACCU, 6(ADDR)
163e:	BEQ	$1663
1640:	MOV	ACCU, T0
1642:	MOV	T4, ACCU
1644:	MOV	ADDR, T4
1646:	MOVUB	ACCU, 1(ADDR)
1649:	CMPUB	ACCU, T3
164b:	BGE	$165C
164d:	MOVB	ACCU, T3
164f:	LEAX	ADDR, T1 + ACCU
1651:	MOV	ACCU, #32
1654:	MOVB	0(ADDR), ACCU
1657:	ADDB	T3, #$0001
165a:	JUMP	$1644
165c:	MOV	ADDR, T0
165e:	MOVUB	ACCU, 1(ADDR)
1661:	JUMP	$1634
1663:	MOVB	ACCU, T3
1665:	CMPUB	ACCU, #$0001
1667:	BGT	$1692
1669:	MOVB	ACCU, T3
166b:	MOV	T4, ACCU
166d:	MOVB	T7, #1
1670:	MOVB	ACCU, T7
1672:	MOV	T5, ACCU
1674:	MOV	ACCU, T4
1676:	SUB	ACCU, T5
1678:	LEAX	ADDR, T1 + ACCU
167a:	MOVB	T8, 0(ADDR)
167d:	MOV	ADDR, T0
167f:	MOVUB	ACCU, 1(ADDR)
1682:	SUB	ACCU, T5
1684:	LEAX	ADDR, T1 + ACCU
1686:	MOVB	0(ADDR), T8
1689:	ADDB	T7, #$0001
168c:	MOVB	ACCU, T3
168e:	CMPUB	ACCU, T7
1690:	BLE	$1670
1692:	MOV	ACCU, T0
1694:	MOV	T4, ACCU
1696:	MOVB	T7, #0
1699:	MOVB	ACCU, T7
169b:	MOV	T5, ACCU
169d:	MOV	ADDR, T4
169f:	MOVUB	T6, 1(ADDR)
16a2:	MOVB	ACCU, T3
16a4:	NEG	ACCU
16a5:	ADD	ACCU, T6
16a7:	CMPU	ACCU, T5
16a9:	BGE	$165C
16ab:	MOV	ACCU, T1
16ad:	LEAX	ADDR, T5 + ACCU
16af:	MOV	ACCU, #32
16b2:	MOVB	0(ADDR), ACCU
16b5:	ADDB	T7, #$0001
16b8:	JUMP	$1699
16ba:	MOVB	ACCU, T3
16bc:	LEAX	ADDR, T1 + ACCU
16be:	MOV	ACCU, #69
16c1:	MOVB	0(ADDR), ACCU
16c4:	MOVB	ACCU, T3
16c6:	ADDB	ACCU, #$0001
16c9:	MOVB	ACCU, ACCU
16cb:	ADD	ACCU, T1
16cd:	MOV	T0, ACCU
16cf:	MOV	ACCU, T5
16d1:	BLT	$16DD
16d3:	MOV	ACCU, #43
16d6:	MOV	ADDR, T0
16d8:	MOVB	0(ADDR), ACCU
16db:	JUMP	$16EA
16dd:	MOV	ACCU, #45
16e0:	MOV	ADDR, T0
16e2:	MOVB	0(ADDR), ACCU
16e5:	MOV	ACCU, T5
16e7:	NEG	ACCU
16e8:	MOV	T5, ACCU
16ea:	MOV	ACCU, T5
16ec:	MOV	ADDR, #10
16ef:	DIVS	ACCU, ADDR
16f1:	MOV	T0, ACCU
16f3:	ADD	T0, #$0030
16f7:	MOVB	ACCU, T3
16f9:	ADDB	ACCU, #$0002
16fc:	MOVB	ACCU, ACCU
16fe:	LEAX	ADDR, T1 + ACCU
1700:	MOVB	0(ADDR), T0
1703:	MOV	ACCU, T5
1705:	MOV	ADDR, #10
1708:	MODS	ACCU, ADDR
170a:	MOV	T0, ACCU
170c:	ADD	T0, #$0030
1710:	MOVB	ACCU, T3
1712:	ADDB	ACCU, #$0003
1715:	MOVB	ACCU, ACCU
1717:	LEAX	ADDR, T1 + ACCU
1719:	MOVB	0(ADDR), T0
171c:	ADDB	T3, #$0004
171f:	JUMPF	$1626
1722:	MOVB	ACCU, T6
1724:	CMPUB	ACCU, #$0007
1726:	BGT	$172E
1728:	MOVD	T2, fround5 + 24
172c:	JUMP	$173B
172e:	MOVB	ACCU, T6
1730:	SHL	ACCU, #2
1732:	MOVB	T4, ACCU
1734:	LEAX	ADDR, inp_op_extrt + 20 + T4
1738:	MOVD	T2, 0(ADDR)
173b:	MOVD	ACCU, 6(FP)
173e:	ADDF	ACCU, T2
1740:	MOVD	T2, ACCU
1742:	MOVD	6(FP), T2
1745:	MOVD	ACCU, #$41200000
174b:	CMPF	ACCU, T2
174d:	BLTF	$159F
1750:	MOVD	ACCU, 6(FP)
1753:	MOVD	$03, #$41200000
1759:	DIVF	ACCU, $03
175b:	MOVD	6(FP), ACCU
175e:	ADD	T5, #$0001
1762:	JUMPF	$159F
1765:	MOV	ACCU, T5
1767:	CMPS	ACCU, #$0003
176a:	BLT	$1771
176c:	MOV	ACCU, T5
176e:	BGEF	$153A
1771:	MOVB	T12, #1
1774:	JUMP	$1722
1776:	MOV	ACCU, T0
1778:	LEAX	ADDR, T4 + ACCU
177a:	MOV	ACCU, #73
177d:	MOVB	0(ADDR), ACCU
1780:	MOV	ACCU, T0
1782:	LEAX	ADDR, T5 + ACCU
1784:	MOV	ACCU, #78
1787:	MOVB	0(ADDR), ACCU
178a:	MOV	ACCU, T6
178c:	LEAX	ADDR, T0 + ACCU
178e:	MOV	ACCU, #70
1791:	MOVB	0(ADDR), ACCU
1794:	ADDB	T3, #$0003
1797:	JUMPF	$1626
179a:	MOVB	T3, #0
179d:	MOV	T4, #0
17a0:	MOV	T5, #1
17a3:	MOV	T6, #2
17a6:	JUMPF	$147B
17a9:	MOVD	ACCU, T2
17ab:	NEGF	ACCU
17ac:	MOVD	T2, ACCU
17ae:	MOVD	P0, ACCU
17b0:	MOVD	6(FP), T2
17b3:	MOV	ACCU, #45
17b6:	JUMPF	$146A
--------------------------------------------------------------------
isinf:
17b9:	ENTER	0, 2
17bd:	MOVD	ACCU, P0
17bf:	MOVD	T0, ACCU
17c1:	MOVD	buffer + 12, T0
17c5:	MOV	ACCU, buffer + 14
17c9:	SHRU	ACCU, #7
17cb:	CMPUB	ACCU, #$00FF
17cd:	NOT	ACCU
17ce:	ANDB	ACCU, #$0001
17d1:	MOVB	ACCU, ACCU
17d3:	RETURN	0, 2
--------------------------------------------------------------------
fround5:
2fe8 : __ __ __ BYT 00 00 00 3f cd cc 4c 3d 0a d7 a3 3b 6f 12 03 3a : ...?..L=...;o..:
2ff8 : __ __ __ BYT 17 b7 51 38 ac c5 a7 36 bd 37 06 35             : ..Q8...6.7.5
--------------------------------------------------------------------
17d7 : __ __ __ BYT 20 25 73 0a 00                                  :  %s..
--------------------------------------------------------------------
parse_expr:
17dc:	ENTER	0, 2
17e0:	PUSH	#$0004
17e3:	CALL	init_scanner + 0
17e6:	CALL	next_token + 0
17e9:	CALL	parse_arith_expr + 0
17ec:	MOV	T0, ACCU
17ee:	MOVUB	ACCU, token + 0
17f2:	CMPUB	ACCU, #$0007
17f4:	BNE	$17FF
17f6:	MOV	ACCU, T0
17f8:	POP	#$0004
17fb:	RETURN	0, 2
17ff:	LEA	T0, $1de1
1803:	MOV	2(SP), T0
1806:	CALL	printf + 0
1809:	MOVB	T1, token + 0
180d:	MOVB	2(SP), T1
1810:	CALL	print_token + 0
1813:	LEA	T0, $1e04
1817:	MOV	2(SP), T0
181a:	CALL	printf + 0
181d:	JUMP	$181D
--------------------------------------------------------------------
init_scanner:
181f:	ENTER	0, 2
1823:	PUSH	#$0002
1826:	MOV	ACCU, #0
1829:	MOV	position + 0, ACCU
182d:	CALL	next_char + 0
1830:	POP	#$0002
1833:	RETURN	0, 2
--------------------------------------------------------------------
position:
3004 : __ __ __ BYT 00 00                                           : ..
--------------------------------------------------------------------
next_char:
1837:	ENTER	0, 2
183b:	MOV	T0, position + 0
183f:	LEAX	ADDR, inputstring + 0 + T0
1843:	MOVB	T2, 0(ADDR)
1846:	MOVB	current_char + 0, T2
184a:	ADD	T0, #$0001
184e:	MOV	position + 0, T0
1852:	RETURN	0, 2
--------------------------------------------------------------------
current_char:
3101 : __ __ __ BSS	1
--------------------------------------------------------------------
next_token:
1856:	ENTER	0, 2
185a:	PUSH	#$0008
185d:	MOVUB	P0, current_char + 0
1861:	CALL	is_space + 0
1864:	BEQ	$186B
1866:	CALL	next_char + 0
1869:	JUMP	$185D
186b:	MOVUB	P0, current_char + 0
186f:	CALL	isdigit + 0
1872:	BEQ	$187E
1874:	CALL	string_to_number + 0
1877:	POP	#$0008
187a:	RETURN	0, 2
187e:	MOVB	T0, current_char + 0
1882:	MOVB	ACCU, T0
1884:	CMPUB	ACCU, #$002D
1886:	BNE	$1890
1888:	MOVB	P0, #2
188b:	CALL	make_token + 0
188e:	JUMP	$1877
1890:	MOVB	ACCU, T0
1892:	MOV	T1, ACCU
1894:	CMPUB	ACCU, #$002D
1896:	BLE	$18D6
1898:	MOVB	ACCU, T0
189a:	CMPUB	ACCU, #$0028
189c:	BNE	$18A3
189e:	MOVB	P0, #5
18a1:	JUMP	$188B
18a3:	MOVB	ACCU, T0
18a5:	CMPUB	ACCU, #$0029
18a7:	BNE	$18AE
18a9:	MOVB	P0, #6
18ac:	JUMP	$188B
18ae:	MOVB	ACCU, T0
18b0:	CMPUB	ACCU, #$002A
18b2:	BNE	$18B9
18b4:	MOVB	P0, #3
18b7:	JUMP	$188B
18b9:	MOVB	ACCU, T0
18bb:	CMPUB	ACCU, #$002B
18bd:	BNE	$18C4
18bf:	MOVB	P0, #1
18c2:	JUMP	$188B
18c4:	MOV	4(SP), T1
18c7:	MOV	6(SP), T1
18ca:	LEA	T1, $1ab0
18ce:	MOV	2(SP), T1
18d1:	CALL	printf + 0
18d4:	JUMP	$1877
18d6:	MOVB	ACCU, T0
18d8:	CMPUB	ACCU, #$002E
18da:	BNE	$18E5
18dc:	MOV	ACCU, #7
18df:	MOVB	token + 0, ACCU
18e3:	JUMP	$1877
18e5:	MOVB	ACCU, T0
18e7:	CMPUB	ACCU, #$002F
18e9:	BNE	$18C4
18eb:	MOVB	P0, #4
18ee:	JUMP	$188B
--------------------------------------------------------------------
is_space:
18f0:	ENTER	0, 2
18f4:	MOV	ACCU, P0
18f6:	MOV	T0, ACCU
18f8:	CMPU	ACCU, #$0020
18fb:	BEQ	$1917
18fd:	MOV	ACCU, T0
18ff:	CMPU	ACCU, #$0009
1902:	BEQ	$1917
1904:	MOV	ACCU, T0
1906:	CMPU	ACCU, #$000A
1909:	BEQ	$1917
190b:	MOV	ACCU, T0
190d:	CMPU	ACCU, #$000D
1910:	BEQ	$1917
1912:	MOV	ACCU, #0
1915:	JUMP	$191A
1917:	MOV	ACCU, #1
191a:	RETURN	0, 2
--------------------------------------------------------------------
isdigit:
191e:	ENTER	0, 2
1922:	MOV	ACCU, P0
1924:	MOV	T0, ACCU
1926:	CMPS	ACCU, #$0030
1929:	BGT	$1932
192b:	MOV	ACCU, T0
192d:	CMPS	ACCU, #$0039
1930:	BGE	$1937
1932:	MOV	ACCU, #0
1935:	JUMP	$193A
1937:	MOV	ACCU, #1
193a:	RETURN	0, 2
--------------------------------------------------------------------
string_to_number:
193e:	ENTER	0, 2
1942:	PUSH	#$0002
1945:	MOV	P0, #6
1948:	MOV	ACCU, #0
194b:	MOVB	token + 0, ACCU
194f:	CALL	malloc + 0
1952:	MOV	T0, ACCU
1954:	MOV	array + 0, T0
1958:	MOVUB	P0, current_char + 0
195c:	MOV	T0, #0
195f:	CALL	isdigit + 0
1962:	BNE	$196C
1964:	MOVUB	ACCU, current_char + 0
1968:	CMPUB	ACCU, #$0020
196a:	BNE	$19C1
196c:	MOV	ACCU, #0
196f:	MOV	number + 0, ACCU
1973:	MOVUB	P0, current_char + 0
1977:	CALL	isdigit + 0
197a:	BEQ	$1991
197c:	MOV	T2, number + 0
1980:	MUL	T2, #10
1983:	MOVUB	ACCU, current_char + 0
1987:	ADD	ACCU, #$FFD0
198b:	ADD	T2, ACCU
198d:	MOV	number + 0, T2
1991:	CALL	next_char + 0
1994:	MOVUB	P0, current_char + 0
1998:	CALL	isdigit + 0
199b:	BNE	$1973
199d:	MOV	ACCU, T0
199f:	CMPS	ACCU, #$0002
19a2:	BLT	$19B7
19a4:	MOV	ACCU, T0
19a6:	SHL	ACCU, #1
19a8:	MOV	T2, array + 0
19ac:	ADD	T2, ACCU
19ae:	MOV	T3, number + 0
19b2:	MOV	ADDR, T2
19b4:	MOV	0(ADDR), T3
19b7:	MOVUB	P0, current_char + 0
19bb:	ADD	T0, #$0001
19bf:	JUMP	$195F
19c1:	POP	#$0002
19c4:	RETURN	0, 2
--------------------------------------------------------------------
token:
3102 : __ __ __ BSS	1
--------------------------------------------------------------------
malloc:
19c8:	ENTER	0, 2
19cc:	MOV	ACCU, P0
19ce:	MOV	T0, ACCU
19d0:	ADD	T0, #$0007
19d4:	ANDB	T0, #$00FC
19d7:	MOV	ACCU, T0
19d9:	MOV	P0, ACCU
19db:	MOVUB	ACCU, freeHeapInit + 0
19df:	BNE	$1A02
19e1:	LEA	T0, $3109
19e5:	MOV	freeHeap + 0, T0
19e9:	LEA	T2, $0000
19ed:	MOV	$310b, T2
19f1:	LEA	ACCU, $9000
19f5:	SUB	ACCU, T0
19f7:	MOV	$3109, ACCU
19fb:	MOV	ACCU, #1
19fe:	MOVB	freeHeapInit + 0, ACCU
1a02:	MOV	T0, freeHeap + 0
1a06:	MOV	ACCU, T0
1a08:	BNE	$1A12
1a0a:	LEA	ACCU, $0000
1a0e:	RETURN	0, 2
1a12:	LEA	T2, $0000
1a16:	MOV	ACCU, P0
1a18:	MOV	T3, ACCU
1a1a:	MOV	ADDR, T0
1a1c:	MOV	T4, 0(ADDR)
1a1f:	MOV	ACCU, T4
1a21:	CMPU	ACCU, T3
1a23:	BGT	$1A8D
1a25:	MOV	ACCU, T0
1a27:	MOV	T5, ACCU
1a29:	MOV	ACCU, T4
1a2b:	CMPU	ACCU, T3
1a2d:	BNE	$1A4F
1a2f:	MOV	T0, 2(ADDR)
1a32:	MOV	ACCU, T5
1a34:	ADD	ACCU, #$0002
1a38:	MOV	T3, ACCU
1a3a:	MOV	ACCU, T2
1a3c:	BNE	$1A46
1a3e:	MOV	freeHeap + 0, T0
1a42:	MOV	ACCU, T3
1a44:	JUMP	$1A0E
1a46:	MOV	ADDR, T2
1a48:	MOV	2(ADDR), T0
1a4b:	MOV	ACCU, T3
1a4d:	JUMP	$1A0E
1a4f:	MOV	ACCU, T3
1a51:	ADD	T5, ACCU
1a53:	MOV	ACCU, T4
1a55:	SUB	ACCU, T3
1a57:	MOV	ADDR, T5
1a59:	MOV	0(ADDR), ACCU
1a5c:	MOV	ADDR, T0
1a5e:	MOV	T4, 2(ADDR)
1a61:	MOV	ADDR, T5
1a63:	MOV	2(ADDR), T4
1a66:	MOV	ACCU, T0
1a68:	MOV	T4, ACCU
1a6a:	ADD	T4, #$0002
1a6e:	MOV	ACCU, T2
1a70:	BNE	$1A7F
1a72:	MOV	freeHeap + 0, T5
1a76:	MOV	ADDR, T0
1a78:	MOV	0(ADDR), T3
1a7b:	MOV	ACCU, T4
1a7d:	JUMP	$1A0E
1a7f:	MOV	ADDR, T2
1a81:	MOV	2(ADDR), T5
1a84:	MOV	ADDR, T0
1a86:	MOV	0(ADDR), T3
1a89:	MOV	ACCU, T4
1a8b:	JUMP	$1A0E
1a8d:	MOV	ACCU, T0
1a8f:	MOV	T0, 2(ADDR)
1a92:	MOV	T2, ACCU
1a94:	MOV	ACCU, T0
1a96:	BNE	$1A1A
1a98:	JUMPF	$1A0A
--------------------------------------------------------------------
freeHeapInit:
3006 : __ __ __ BYT 00                                              : .
--------------------------------------------------------------------
freeHeap:
3103 : __ __ __ BSS	2
--------------------------------------------------------------------
array:
3105 : __ __ __ BSS	2
--------------------------------------------------------------------
number:
3107 : __ __ __ BSS	2
--------------------------------------------------------------------
make_token:
1a9b:	ENTER	0, 2
1a9f:	PUSH	#$0002
1aa2:	CALL	next_char + 0
1aa5:	MOVB	token + 0, P0
1aa9:	POP	#$0002
1aac:	RETURN	0, 2
--------------------------------------------------------------------
1ab0 : __ __ __ BYT 49 4c 4c 45 47 41 4c 20 43 48 41 52 20 25 63 20 : ILLEGAL CHAR %c 
1ac0 : __ __ __ BYT 28 48 45 58 20 25 78 29 0a 00                   : (HEX %x)..
--------------------------------------------------------------------
parse_arith_expr:
1aca:	ENTER	0, 2
1ace:	PUSH	#$0006
1ad1:	MOV	ACCU, #1
1ad4:	MOVB	4(SP), ACCU
1ad7:	MOV	ACCU, #2
1ada:	MOVB	5(SP), ACCU
1add:	MOV	T0, #$1ba9
1ae1:	MOV	2(SP), T0
1ae4:	CALL	parse_expressions + 0
1ae7:	POP	#$0006
1aea:	RETURN	0, 2
--------------------------------------------------------------------
parse_expressions:
1aee:	ENTER	5, 7
1af2:	PUSH	#$0002
1af5:	MOV	T2, 2(FP)
1af8:	MOV	ADDR, T2
1afa:	CALL	ADDR
1afb:	MOV	T3, ACCU
1afd:	MOVB	T4, token + 0
1b01:	MOVB	T5, 4(FP)
1b04:	MOVB	ACCU, T5
1b06:	CMPUB	ACCU, T4
1b08:	BNE	$1B3C
1b0a:	MOV	ACCU, T2
1b0c:	MOV	T0, ACCU
1b0e:	MOVB	ACCU, T5
1b10:	MOVB	T1, ACCU
1b12:	MOV	ACCU, T3
1b14:	MOV	P3, ACCU
1b16:	MOVB	P2, token + 0
1b1a:	LEA	P5, $0000
1b1e:	CALL	NewTree + 0
1b21:	MOV	T2, ACCU
1b23:	CALL	next_token + 0
1b26:	MOV	ADDR, T0
1b28:	CALL	ADDR
1b29:	MOV	ADDR, T2
1b2b:	MOV	3(ADDR), ACCU
1b2e:	MOV	ACCU, T2
1b30:	MOV	T3, ACCU
1b32:	MOVB	T4, token + 0
1b36:	MOVB	ACCU, T1
1b38:	CMPUB	ACCU, T4
1b3a:	BEQ	$1B12
1b3c:	MOVB	T4, token + 0
1b40:	MOVUB	ACCU, 5(FP)
1b43:	CMPUB	ACCU, T4
1b45:	BEQ	$1B12
1b47:	MOV	ACCU, T3
1b49:	POP	#$0002
1b4c:	RETURN	5, 7
--------------------------------------------------------------------
NewTree:
1b50:	ENTER	0, 2
1b54:	PUSH	#$0002
1b57:	MOV	P0, #5
1b5a:	CALL	malloc + 0
1b5d:	MOV	T0, ACCU
1b5f:	LEA	ACCU, $0000
1b63:	CMPU	ACCU, T0
1b65:	BNE	$1B6D
1b67:	MOV	P0, #1
1b6a:	CALL	exit + 0
1b6d:	MOVB	ACCU, P2
1b6f:	MOVB	T2, ACCU
1b71:	MOV	ADDR, T0
1b73:	MOVB	0(ADDR), T2
1b76:	MOV	ACCU, P3
1b78:	MOV	1(ADDR), ACCU
1b7b:	MOV	ACCU, P5
1b7d:	MOV	3(ADDR), ACCU
1b80:	MOV	ACCU, T0
1b82:	POP	#$0002
1b85:	RETURN	0, 2
--------------------------------------------------------------------
exit:
1b89:	ENTER	0, 2
1b8d:	JSR	$1b94
1b90:	RETURN	0, 2
--------------------------------------------------------------------
1b94 : a5 0d __ LDA P0 
1b96 : 85 1b __ STA ACCU + 0 
1b98 : a5 0e __ LDA P1 
1b9a : 85 1c __ STA ACCU + 1 
1b9c : ae e6 2f LDX $2fe6 ; (spentry + 0)
1b9f : 9a __ __ TXS
1ba0 : a9 4c __ LDA #$4c
1ba2 : 85 54 __ STA $54 
1ba4 : a9 00 __ LDA #$00
1ba6 : 85 13 __ STA P6 
1ba8 : 60 __ __ RTS
--------------------------------------------------------------------
parse_term:
1ba9:	ENTER	0, 2
1bad:	PUSH	#$0006
1bb0:	MOV	ACCU, #3
1bb3:	MOVB	4(SP), ACCU
1bb6:	MOV	ACCU, #4
1bb9:	MOVB	5(SP), ACCU
1bbc:	MOV	T0, #$1bcd
1bc0:	MOV	2(SP), T0
1bc3:	CALL	parse_expressions + 0
1bc6:	POP	#$0006
1bc9:	RETURN	0, 2
--------------------------------------------------------------------
parse_factor:
1bcd:	ENTER	2, 4
1bd1:	PUSH	#$0004
1bd4:	MOVB	T0, token + 0
1bd8:	MOVB	ACCU, T0
1bda:	CMPUB	ACCU, #$0005
1bdc:	BEQ	$1C0C
1bde:	MOVB	ACCU, T0
1be0:	BNE	$1BEC
1be2:	CALL	parse_leaf + 0
1be5:	POP	#$0004
1be8:	RETURN	2, 4
1bec:	LEA	T2, $1dce
1bf0:	MOV	2(SP), T2
1bf3:	CALL	printf + 0
1bf6:	MOVB	T0, token + 0
1bfa:	MOVB	2(SP), T0
1bfd:	CALL	print_token + 0
1c00:	LEA	T2, $1ddf
1c04:	MOV	2(SP), T2
1c07:	CALL	printf + 0
1c0a:	JUMP	$1C0A
1c0c:	CALL	next_token + 0
1c0f:	CALL	parse_arith_expr + 0
1c12:	MOV	T2, ACCU
1c14:	MOVUB	ACCU, token + 0
1c18:	CMPUB	ACCU, #$0006
1c1a:	BNE	$1C23
1c1c:	CALL	next_token + 0
1c1f:	MOV	ACCU, T2
1c21:	JUMP	$1BE5
1c23:	LEA	T2, $1c43
1c27:	MOV	2(SP), T2
1c2a:	CALL	printf + 0
1c2d:	MOVB	T0, token + 0
1c31:	MOVB	2(SP), T0
1c34:	CALL	print_token + 0
1c37:	LEA	T2, $1d6d
1c3b:	MOV	2(SP), T2
1c3e:	CALL	printf + 0
1c41:	JUMP	$1C41
--------------------------------------------------------------------
1c43 : __ __ __ BYT 45 58 50 54 45 43 54 45 44 20 22 29 22 20 49 4e : EXPTECTED ")" IN
1c53 : __ __ __ BYT 20 46 41 43 54 4f 52 20 42 55 54 20 46 4f 55 4e :  FACTOR BUT FOUN
1c63 : __ __ __ BYT 44 20 00                                        : D .
--------------------------------------------------------------------
print_token:
1c66:	ENTER	0, 2
1c6a:	PUSH	#$000A
1c6d:	MOVB	T0, 2(FP)
1c70:	MOVB	ACCU, T0
1c72:	CMPUB	ACCU, #$0004
1c74:	BEQF	$1D30
1c77:	MOVB	ACCU, T0
1c79:	MOV	T2, ACCU
1c7b:	CMPUB	ACCU, #$0004
1c7d:	BLE	$1CFC
1c7f:	MOVB	ACCU, T0
1c81:	BEQ	$1CCD
1c83:	MOVB	ACCU, T0
1c85:	CMPUB	ACCU, #$0001
1c87:	BEQ	$1CC2
1c89:	MOVB	ACCU, T0
1c8b:	CMPUB	ACCU, #$0002
1c8d:	BEQ	$1CB7
1c8f:	MOVB	ACCU, T0
1c91:	CMPUB	ACCU, #$0003
1c93:	BNE	$1CA8
1c95:	MOVB	P0, #32
1c98:	CALL	putchar + 0
1c9b:	MOVB	P0, #42
1c9e:	CALL	putchar + 0
1ca1:	POP	#$000A
1ca4:	RETURN	0, 2
1ca8:	MOV	4(SP), T2
1cab:	LEA	T2, $1d5b
1caf:	MOV	2(SP), T2
1cb2:	CALL	printf + 0
1cb5:	JUMP	$1CA1
1cb7:	MOVB	P0, #32
1cba:	CALL	putchar + 0
1cbd:	MOVB	P0, #45
1cc0:	JUMP	$1C9E
1cc2:	MOVB	P0, #32
1cc5:	CALL	putchar + 0
1cc8:	MOVB	P0, #43
1ccb:	JUMP	$1C9E
1ccd:	LEA	T2, $1d3c
1cd1:	MOV	2(SP), T2
1cd4:	MOV	T2, number + 0
1cd8:	MOV	4(SP), T2
1cdb:	CALL	printf + 0
1cde:	LEA	T2, $1d40
1ce2:	MOV	2(SP), T2
1ce5:	MOV	ADDR, array + 0
1ce8:	MOV	T3, 4(ADDR)
1ceb:	MOV	8(SP), T3
1cee:	MOV	T3, 2(ADDR)
1cf1:	MOV	T2, 0(ADDR)
1cf4:	MOV	6(SP), T3
1cf7:	MOV	4(SP), T2
1cfa:	JUMP	$1CB2
1cfc:	MOVB	ACCU, T0
1cfe:	CMPUB	ACCU, #$0005
1d00:	BNE	$1D0D
1d02:	MOVB	P0, #32
1d05:	CALL	putchar + 0
1d08:	MOVB	P0, #40
1d0b:	JUMP	$1C9E
1d0d:	MOVB	ACCU, T0
1d0f:	CMPUB	ACCU, #$0006
1d11:	BNE	$1D1E
1d13:	MOVB	P0, #32
1d16:	CALL	putchar + 0
1d19:	MOVB	P0, #41
1d1c:	JUMP	$1C9E
1d1e:	MOVB	ACCU, T0
1d20:	CMPUB	ACCU, #$0007
1d22:	BNE	$1CA8
1d24:	MOVB	P0, #32
1d27:	CALL	putchar + 0
1d2a:	MOVB	P0, #46
1d2d:	JUMPF	$1C9E
1d30:	MOVB	P0, #32
1d33:	CALL	putchar + 0
1d36:	MOVB	P0, #47
1d39:	JUMPF	$1C9E
--------------------------------------------------------------------
1d3c : __ __ __ BYT 20 25 64 00                                     :  %d.
--------------------------------------------------------------------
1d40 : __ __ __ BYT 20 25 64 20 25 64 20 25 64 20 00                :  %d %d %d .
--------------------------------------------------------------------
putchar:
1d4b:	ENTER	0, 2
1d4f:	JSR	$1d56
1d52:	RETURN	0, 2
--------------------------------------------------------------------
1d56 : a5 0d __ LDA P0 
1d58 : 4c e4 10 JMP $10e4 ; (putpch + 0)
--------------------------------------------------------------------
1d5b : __ __ __ BYT 55 4e 44 45 46 49 4e 45 44 20 54 4f 4b 45 4e 25 : UNDEFINED TOKEN%
1d6b : __ __ __ BYT 64 00                                           : d.
--------------------------------------------------------------------
1d6d : __ __ __ BYT 0a 00                                           : ..
--------------------------------------------------------------------
parse_leaf:
1d6f:	ENTER	2, 4
1d73:	PUSH	#$0002
1d76:	MOV	P2, number + 0
1d7a:	MOV	P4, array + 0
1d7e:	CALL	NewLeaf + 0
1d81:	MOV	T0, ACCU
1d83:	CALL	next_token + 0
1d86:	MOV	ACCU, T0
1d88:	POP	#$0002
1d8b:	RETURN	2, 4
--------------------------------------------------------------------
NewLeaf:
1d8f:	ENTER	0, 2
1d93:	PUSH	#$0002
1d96:	MOV	P0, #5
1d99:	CALL	malloc + 0
1d9c:	MOV	T0, ACCU
1d9e:	LEA	ACCU, $0000
1da2:	CMPU	ACCU, T0
1da4:	BNE	$1DAC
1da6:	MOV	P0, #1
1da9:	CALL	exit + 0
1dac:	MOV	ACCU, #0
1daf:	MOV	ADDR, T0
1db1:	MOVB	0(ADDR), ACCU
1db4:	MOV	T1, number + 0
1db8:	MOV	ADDR, T0
1dba:	MOV	1(ADDR), T1
1dbd:	MOV	1(ADDR), T1
1dc0:	MOV	ACCU, P4
1dc2:	MOV	1(ADDR), ACCU
1dc5:	MOV	ACCU, T0
1dc7:	POP	#$0002
1dca:	RETURN	0, 2
--------------------------------------------------------------------
1dce : __ __ __ BYT 55 4e 45 50 45 43 54 45 44 20 46 41 43 54 4f 52 : UNEPECTED FACTOR
1dde : __ __ __ BYT 00                                              : .
--------------------------------------------------------------------
1ddf : __ __ __ BYT 0a 00                                           : ..
--------------------------------------------------------------------
1de1 : __ __ __ BYT 55 4e 45 58 50 45 43 54 45 44 20 54 4f 4b 45 4e : UNEXPECTED TOKEN
1df1 : __ __ __ BYT 20 41 54 20 45 4e 44 20 4f 46 20 49 4e 50 55 54 :  AT END OF INPUT
1e01 : __ __ __ BYT 3a 20 00                                        : : .
--------------------------------------------------------------------
1e04 : __ __ __ BYT 57 48 49 4c 45 31 0a 00                         : WHILE1..
--------------------------------------------------------------------
eval2:
1e0c:	ENTER	4, 6
1e10:	PUSH	#$0004
1e13:	MOV	T0, 2(FP)
1e16:	MOV	ADDR, T0
1e18:	MOVB	T1, 0(ADDR)
1e1b:	MOVB	ACCU, T1
1e1d:	BNE	$1E29
1e1f:	MOV	ACCU, 1(ADDR)
1e22:	POP	#$0004
1e25:	RETURN	4, 6
1e29:	MOVB	ACCU, T1
1e2b:	CMPUB	ACCU, #$0001
1e2d:	BNE	$1E54
1e2f:	MOV	T3, 1(ADDR)
1e32:	MOV	2(SP), T3
1e35:	CALL	eval2 + 0
1e38:	MOV	ADDR, T0
1e3a:	MOV	T0, 3(ADDR)
1e3d:	MOV	T3, ACCU
1e3f:	MOV	2(SP), T0
1e42:	CALL	eval2 + 0
1e45:	MOV	T0, ACCU
1e47:	MOV	ACCU, T3
1e49:	MOV	P2, ACCU
1e4b:	MOV	ACCU, T0
1e4d:	MOV	P4, ACCU
1e4f:	CALL	arsum + 0
1e52:	JUMP	$1E22
1e54:	MOVB	ACCU, T1
1e56:	CMPUB	ACCU, #$0003
1e58:	BNE	$1E7F
1e5a:	MOV	T3, 1(ADDR)
1e5d:	MOV	2(SP), T3
1e60:	CALL	eval2 + 0
1e63:	MOV	ADDR, T0
1e65:	MOV	T0, 3(ADDR)
1e68:	MOV	T3, ACCU
1e6a:	MOV	2(SP), T0
1e6d:	CALL	eval2 + 0
1e70:	MOV	T0, ACCU
1e72:	MOV	ACCU, T3
1e74:	MOV	P2, ACCU
1e76:	MOV	ACCU, T0
1e78:	MOV	P4, ACCU
1e7a:	CALL	artimes + 0
1e7d:	JUMP	$1E22
1e7f:	MOVB	ACCU, T1
1e81:	CMPUB	ACCU, #$0004
1e83:	BEQ	$1E9B
1e85:	MOV	2(SP), T0
1e88:	CALL	print_tree + 0
1e8b:	LEA	T0, $208b
1e8f:	MOV	2(SP), T0
1e92:	CALL	printf + 0
1e95:	LEA	ACCU, $0000
1e99:	JUMP	$1E22
1e9b:	MOV	T3, 1(ADDR)
1e9e:	MOV	2(SP), T3
1ea1:	CALL	eval2 + 0
1ea4:	MOV	ADDR, T0
1ea6:	MOV	T0, 3(ADDR)
1ea9:	MOV	T3, ACCU
1eab:	MOV	2(SP), T0
1eae:	CALL	eval2 + 0
1eb1:	MOV	T0, ACCU
1eb3:	MOV	ACCU, T3
1eb5:	MOV	P2, ACCU
1eb7:	MOV	ACCU, T0
1eb9:	MOV	P4, ACCU
1ebb:	CALL	ardivide + 0
1ebe:	JUMPF	$1E22
--------------------------------------------------------------------
arsum:
1ec1:	ENTER	0, 2
1ec5:	PUSH	#$0002
1ec8:	MOV	P0, #6
1ecb:	CALL	malloc + 0
1ece:	MOV	T0, ACCU
1ed0:	MOV	T1, ACCU
1ed2:	MOV	T2, #0
1ed5:	MOV	ACCU, P4
1ed7:	MOV	T3, ACCU
1ed9:	MOV	ACCU, P2
1edb:	MOV	T4, ACCU
1edd:	MOV	ADDR, T3
1edf:	MOV	T5, 0(ADDR)
1ee2:	MOV	ADDR, T4
1ee4:	MOV	ACCU, 0(ADDR)
1ee7:	ADD	T5, ACCU
1ee9:	MOV	ADDR, T1
1eeb:	MOV	0(ADDR), T5
1eee:	ADD	T3, #$0002
1ef2:	ADD	T4, #$0002
1ef6:	ADD	T1, #$0002
1efa:	ADD	T2, #$0001
1efe:	MOVB	ACCU, T2
1f00:	CMPUB	ACCU, #$0003
1f02:	BGT	$1EDD
1f04:	MOV	ACCU, T0
1f06:	POP	#$0002
1f09:	RETURN	0, 2
--------------------------------------------------------------------
artimes:
1f0d:	ENTER	0, 2
1f11:	PUSH	#$0002
1f14:	MOV	P0, #6
1f17:	CALL	malloc + 0
1f1a:	MOV	T0, ACCU
1f1c:	MOV	T1, ACCU
1f1e:	MOV	T2, #0
1f21:	MOV	ACCU, P4
1f23:	MOV	T3, ACCU
1f25:	MOV	ACCU, P2
1f27:	MOV	T4, ACCU
1f29:	MOV	ADDR, T3
1f2b:	MOV	T5, 0(ADDR)
1f2e:	MOV	ADDR, T4
1f30:	MOV	ACCU, 0(ADDR)
1f33:	MUL	ACCU, T5
1f35:	MOV	ADDR, T1
1f37:	MOV	0(ADDR), ACCU
1f3a:	ADD	T3, #$0002
1f3e:	ADD	T4, #$0002
1f42:	ADD	T1, #$0002
1f46:	ADD	T2, #$0001
1f4a:	MOVB	ACCU, T2
1f4c:	CMPUB	ACCU, #$0003
1f4e:	BGT	$1F29
1f50:	MOV	ACCU, T0
1f52:	POP	#$0002
1f55:	RETURN	0, 2
--------------------------------------------------------------------
ardivide:
1f59:	ENTER	0, 2
1f5d:	PUSH	#$0002
1f60:	MOV	P0, #6
1f63:	CALL	malloc + 0
1f66:	MOV	T0, ACCU
1f68:	MOV	T1, ACCU
1f6a:	MOV	T2, #0
1f6d:	MOV	ACCU, P4
1f6f:	MOV	T3, ACCU
1f71:	MOV	ACCU, P2
1f73:	MOV	T4, ACCU
1f75:	MOV	ADDR, T3
1f77:	MOV	T5, 0(ADDR)
1f7a:	MOV	ADDR, T4
1f7c:	MOV	ACCU, 0(ADDR)
1f7f:	DIVS	ACCU, T5
1f81:	MOV	ADDR, T1
1f83:	MOV	0(ADDR), ACCU
1f86:	ADD	T3, #$0002
1f8a:	ADD	T4, #$0002
1f8e:	ADD	T1, #$0002
1f92:	ADD	T2, #$0001
1f96:	MOVB	ACCU, T2
1f98:	CMPUB	ACCU, #$0003
1f9a:	BGT	$1F75
1f9c:	MOV	ACCU, T0
1f9e:	POP	#$0002
1fa1:	RETURN	0, 2
--------------------------------------------------------------------
print_tree:
1fa5:	ENTER	0, 2
1fa9:	PUSH	#$0006
1fac:	MOVB	P0, #10
1faf:	CALL	putchar + 0
1fb2:	MOV	ACCU, #0
1fb5:	MOV	4(SP), ACCU
1fb8:	MOV	T0, 2(FP)
1fbb:	MOV	2(SP), T0
1fbe:	CALL	print_subtree + 0
1fc1:	POP	#$0006
1fc4:	RETURN	0, 2
--------------------------------------------------------------------
print_subtree:
1fc8:	ENTER	4, 6
1fcc:	PUSH	#$000A
1fcf:	MOV	T0, 4(FP)
1fd2:	MOV	ADDR, 2(FP)
1fd5:	MOVUB	ACCU, 0(ADDR)
1fd8:	BEQ	$202A
1fda:	MOV	ACCU, T0
1fdc:	CMPU	ACCU, #$0000
1fdf:	BEQ	$1FF4
1fe1:	MOV	T1, #0
1fe4:	MOVB	P0, #32
1fe7:	CALL	putchar + 0
1fea:	ADD	T1, #$0001
1fee:	MOV	ACCU, T0
1ff0:	CMPU	ACCU, T1
1ff2:	BNE	$1FE4
1ff4:	MOV	T0, 2(FP)
1ff7:	MOV	ADDR, T0
1ff9:	MOVB	T2, 0(ADDR)
1ffc:	MOVB	2(SP), T2
1fff:	CALL	print_token + 0
2002:	MOVB	P0, #10
2005:	CALL	putchar + 0
2008:	MOV	ADDR, T0
200a:	MOV	T1, 1(ADDR)
200d:	MOV	2(SP), T1
2010:	MOV	T1, 4(FP)
2013:	ADD	T1, #$0002
2017:	MOV	4(SP), T1
201a:	CALL	print_subtree + 0
201d:	MOV	ADDR, T0
201f:	MOV	T0, 3(ADDR)
2022:	MOV	4(FP), T1
2025:	MOV	2(FP), T0
2028:	JUMP	$1FCF
202a:	MOV	ACCU, T0
202c:	CMPU	ACCU, #$0000
202f:	BEQ	$2044
2031:	MOV	T1, #0
2034:	MOVB	P0, #32
2037:	CALL	putchar + 0
203a:	ADD	T1, #$0001
203e:	MOV	ACCU, T0
2040:	CMPU	ACCU, T1
2042:	BNE	$2034
2044:	LEA	T0, $207f
2048:	MOV	2(SP), T0
204b:	MOV	T0, 2(FP)
204e:	MOV	ADDR, T0
2050:	MOV	T1, 1(ADDR)
2053:	MOV	ADDR, T1
2055:	MOV	T1, 0(ADDR)
2058:	MOV	4(SP), T1
205b:	MOV	ADDR, T0
205d:	MOV	T1, 1(ADDR)
2060:	MOV	ADDR, T1
2062:	MOV	T1, 2(ADDR)
2065:	MOV	ADDR, T0
2067:	MOV	T0, 1(ADDR)
206a:	MOV	ADDR, T0
206c:	MOV	6(SP), T1
206f:	MOV	T0, 4(ADDR)
2072:	MOV	8(SP), T0
2075:	CALL	printf + 0
2078:	POP	#$000A
207b:	RETURN	4, 6
--------------------------------------------------------------------
207f : __ __ __ BYT 20 25 64 20 25 64 20 25 64 20 0a 00             :  %d %d %d ..
--------------------------------------------------------------------
208b : __ __ __ BYT 45 52 52 00                                     : ERR.
--------------------------------------------------------------------
208f : __ __ __ BYT 20 20 25 64 20 25 64 20 25 64 20 0a 00          :   %d %d %d ..
--------------------------------------------------------------------
209c : __ __ __ BYT 28 32 20 33 20 34 2b 34 20 35 20 36 29 20 2a 20 : (2 3 4+4 5 6) * 
20ac : __ __ __ BYT 32 20 33 20 34 2e 00                            : 2 3 4..
--------------------------------------------------------------------
20b3 : __ __ __ BYT 20 25 73 0a 00                                  :  %s..
--------------------------------------------------------------------
20b8 : __ __ __ BYT 20 20 25 64 20 25 64 20 25 64 20 0a 00          :   %d %d %d ..
--------------------------------------------------------------------
20c5 : __ __ __ BYT 28 32 20 33 20 34 2b 28 33 20 32 20 31 20 2a 20 : (2 3 4+(3 2 1 * 
20d5 : __ __ __ BYT 32 20 32 20 31 20 29 2a 34 20 35 20 36 29 20 2a : 2 2 1 )*4 5 6) *
20e5 : __ __ __ BYT 20 32 20 33 20 34 2e 00                         :  2 3 4..
--------------------------------------------------------------------
20ed : __ __ __ BYT 20 25 73 0a 00                                  :  %s..
--------------------------------------------------------------------
20f2 : __ __ __ BYT 20 20 25 64 20 25 64 20 25 64 20 0a 00          :   %d %d %d ..
--------------------------------------------------------------------
20ff : __ __ __ BYT 34 20 35 20 36 20 2b 20 32 20 35 20 31 30 20 2f : 4 5 6 + 2 5 10 /
210f : __ __ __ BYT 20 31 30 20 33 20 34 2e 00                      :  10 3 4..
--------------------------------------------------------------------
2118 : __ __ __ BYT 20 25 73 0a 00                                  :  %s..
--------------------------------------------------------------------
211d : __ __ __ BYT 20 20 25 64 20 25 64 20 25 64 20 0a 20 00       :   %d %d %d . .
--------------------------------------------------------------------
212b : __ __ __ BYT 34 20 35 20 36 20 2b 20 32 20 35 20 31 30 20 2a : 4 5 6 + 2 5 10 *
213b : __ __ __ BYT 20 31 30 20 33 20 34 2e 00                      :  10 3 4..
--------------------------------------------------------------------
2144 : __ __ __ BYT 20 25 73 0a 00                                  :  %s..
--------------------------------------------------------------------
2149 : __ __ __ BYT 20 25 64 20 25 64 20 25 64 20 0a 20 00          :  %d %d %d . .
--------------------------------------------------------------------
2156 : __ __ __ BYT 28 34 20 35 20 36 20 2b 20 32 20 35 20 31 30 29 : (4 5 6 + 2 5 10)
2166 : __ __ __ BYT 20 2a 20 31 30 20 33 20 34 2e 00                :  * 10 3 4..
--------------------------------------------------------------------
2171 : __ __ __ BYT 20 25 73 0a 00                                  :  %s..
--------------------------------------------------------------------
2176 : __ __ __ BYT 20 25 64 20 25 64 20 25 64 20 0a 20 00          :  %d %d %d . .
--------------------------------------------------------------------
2183 : __ __ __ BYT 34 20 35 20 36 20 2a 20 32 20 35 20 31 30 20 2b : 4 5 6 * 2 5 10 +
2193 : __ __ __ BYT 20 31 30 20 33 20 34 2e 00                      :  10 3 4..
--------------------------------------------------------------------
219c : __ __ __ BYT 25 73 0a 00                                     : %s..
--------------------------------------------------------------------
21a0 : __ __ __ BYT 20 20 25 64 20 25 64 20 25 64 20 0a 20 00       :   %d %d %d . .
--------------------------------------------------------------------
21ae : __ __ __ BYT 34 20 35 20 36 20 2a 20 32 20 35 20 31 30 20 2a : 4 5 6 * 2 5 10 *
21be : __ __ __ BYT 20 31 30 20 33 20 34 2e 00                      :  10 3 4..
--------------------------------------------------------------------
21c7 : __ __ __ BYT 25 73 0a 00                                     : %s..
--------------------------------------------------------------------
21cb : __ __ __ BYT 20 20 25 64 20 25 64 20 25 64 20 0a 20 00       :   %d %d %d . .
--------------------------------------------------------------------
21d9 : __ __ __ BYT 32 20 33 20 34 20 2a 20 32 20 34 20 36 20 2f 20 : 2 3 4 * 2 4 6 / 
21e9 : __ __ __ BYT 32 20 32 20 31 2e 00                            : 2 2 1..
--------------------------------------------------------------------
21f0 : __ __ __ BYT 25 73 0a 00                                     : %s..
--------------------------------------------------------------------
21f4 : __ __ __ BYT 20 20 25 64 20 25 64 20 25 64 20 0a 20 00       :   %d %d %d . .
--------------------------------------------------------------------
2202 : __ __ __ BYT 32 20 33 20 34 20 2a 20 32 20 34 20 36 20 2f 20 : 2 3 4 * 2 4 6 / 
2212 : __ __ __ BYT 32 20 32 20 31 20 2b 20 33 20 32 20 31 20 2b 20 : 2 2 1 + 3 2 1 + 
2222 : __ __ __ BYT 31 20 32 20 33 2e 00                            : 1 2 3..
--------------------------------------------------------------------
2229 : __ __ __ BYT 25 73 0a 00                                     : %s..
--------------------------------------------------------------------
222d : __ __ __ BYT 20 20 25 64 20 25 64 20 25 64 20 0a 20 00       :   %d %d %d . .
--------------------------------------------------------------------
223b : __ __ __ BYT 32 20 33 20 34 20 2a 20 32 20 34 20 36 20 2f 20 : 2 3 4 * 2 4 6 / 
224b : __ __ __ BYT 32 20 32 20 31 20 2b 20 33 20 32 20 31 20 2a 20 : 2 2 1 + 3 2 1 * 
225b : __ __ __ BYT 31 20 32 20 33 2e 00                            : 1 2 3..
--------------------------------------------------------------------
2262 : __ __ __ BYT 25 73 0a 00                                     : %s..
--------------------------------------------------------------------
2266 : __ __ __ BYT 20 20 25 64 20 25 64 20 25 64 20 0a 20 00       :   %d %d %d . .
--------------------------------------------------------------------
2274 : __ __ __ BYT 41 4c 4c 20 44 4f 4e 45 0a 00                   : ALL DONE..
--------------------------------------------------------------------
freg:
227e : b1 19 __ LDA (IP + 0),y 
2280 : c8 __ __ INY
2281 : aa __ __ TAX
2282 : b5 00 __ LDA $00,x 
2284 : 85 03 __ STA WORK + 0 
2286 : b5 01 __ LDA $01,x 
2288 : 85 04 __ STA WORK + 1 
228a : b5 02 __ LDA $02,x 
228c : 85 05 __ STA WORK + 2 
228e : b5 03 __ LDA WORK + 0,x 
2290 : 85 06 __ STA WORK + 3 
2292 : a5 05 __ LDA WORK + 2 
2294 : 0a __ __ ASL
2295 : a5 06 __ LDA WORK + 3 
2297 : 2a __ __ ROL
2298 : 85 08 __ STA WORK + 5 
229a : f0 06 __ BEQ $22a2
229c : a5 05 __ LDA WORK + 2 
229e : 09 80 __ ORA #$80
22a0 : 85 05 __ STA WORK + 2 
22a2 : a5 1d __ LDA ACCU + 2 
22a4 : 0a __ __ ASL
22a5 : a5 1e __ LDA ACCU + 3 
22a7 : 2a __ __ ROL
22a8 : 85 07 __ STA WORK + 4 
22aa : f0 06 __ BEQ $22b2
22ac : a5 1d __ LDA ACCU + 2 
22ae : 09 80 __ ORA #$80
22b0 : 85 1d __ STA ACCU + 2 
22b2 : 60 __ __ RTS
22b3 : 06 1e __ ASL ACCU + 3 
22b5 : a5 07 __ LDA WORK + 4 
22b7 : 6a __ __ ROR
22b8 : 85 1e __ STA ACCU + 3 
22ba : b0 06 __ BCS $22c2
22bc : a5 1d __ LDA ACCU + 2 
22be : 29 7f __ AND #$7f
22c0 : 85 1d __ STA ACCU + 2 
22c2 : 60 __ __ RTS
--------------------------------------------------------------------
faddsub:
22c3 : a9 ff __ LDA #$ff
22c5 : c5 07 __ CMP WORK + 4 
22c7 : f0 04 __ BEQ $22cd
22c9 : c5 08 __ CMP WORK + 5 
22cb : d0 11 __ BNE $22de
22cd : a5 1e __ LDA ACCU + 3 
22cf : 09 7f __ ORA #$7f
22d1 : 85 1e __ STA ACCU + 3 
22d3 : a9 80 __ LDA #$80
22d5 : 85 1d __ STA ACCU + 2 
22d7 : a9 00 __ LDA #$00
22d9 : 85 1b __ STA ACCU + 0 
22db : 85 1c __ STA ACCU + 1 
22dd : 60 __ __ RTS
22de : 38 __ __ SEC
22df : a5 07 __ LDA WORK + 4 
22e1 : e5 08 __ SBC WORK + 5 
22e3 : f0 38 __ BEQ $231d
22e5 : aa __ __ TAX
22e6 : b0 25 __ BCS $230d
22e8 : e0 e9 __ CPX #$e9
22ea : b0 0e __ BCS $22fa
22ec : a5 08 __ LDA WORK + 5 
22ee : 85 07 __ STA WORK + 4 
22f0 : a9 00 __ LDA #$00
22f2 : 85 1b __ STA ACCU + 0 
22f4 : 85 1c __ STA ACCU + 1 
22f6 : 85 1d __ STA ACCU + 2 
22f8 : f0 23 __ BEQ $231d
22fa : a5 1d __ LDA ACCU + 2 
22fc : 4a __ __ LSR
22fd : 66 1c __ ROR ACCU + 1 
22ff : 66 1b __ ROR ACCU + 0 
2301 : e8 __ __ INX
2302 : d0 f8 __ BNE $22fc
2304 : 85 1d __ STA ACCU + 2 
2306 : a5 08 __ LDA WORK + 5 
2308 : 85 07 __ STA WORK + 4 
230a : 4c 1d 23 JMP $231d ; (faddsub + 90)
230d : e0 18 __ CPX #$18
230f : b0 33 __ BCS $2344
2311 : a5 05 __ LDA WORK + 2 
2313 : 4a __ __ LSR
2314 : 66 04 __ ROR WORK + 1 
2316 : 66 03 __ ROR WORK + 0 
2318 : ca __ __ DEX
2319 : d0 f8 __ BNE $2313
231b : 85 05 __ STA WORK + 2 
231d : a5 1e __ LDA ACCU + 3 
231f : 29 80 __ AND #$80
2321 : 85 1e __ STA ACCU + 3 
2323 : 45 06 __ EOR WORK + 3 
2325 : 30 31 __ BMI $2358
2327 : 18 __ __ CLC
2328 : a5 1b __ LDA ACCU + 0 
232a : 65 03 __ ADC WORK + 0 
232c : 85 1b __ STA ACCU + 0 
232e : a5 1c __ LDA ACCU + 1 
2330 : 65 04 __ ADC WORK + 1 
2332 : 85 1c __ STA ACCU + 1 
2334 : a5 1d __ LDA ACCU + 2 
2336 : 65 05 __ ADC WORK + 2 
2338 : 85 1d __ STA ACCU + 2 
233a : 90 08 __ BCC $2344
233c : 66 1d __ ROR ACCU + 2 
233e : 66 1c __ ROR ACCU + 1 
2340 : 66 1b __ ROR ACCU + 0 
2342 : e6 07 __ INC WORK + 4 
2344 : a5 07 __ LDA WORK + 4 
2346 : c9 ff __ CMP #$ff
2348 : f0 83 __ BEQ $22cd
234a : 4a __ __ LSR
234b : 05 1e __ ORA ACCU + 3 
234d : 85 1e __ STA ACCU + 3 
234f : b0 06 __ BCS $2357
2351 : a5 1d __ LDA ACCU + 2 
2353 : 29 7f __ AND #$7f
2355 : 85 1d __ STA ACCU + 2 
2357 : 60 __ __ RTS
2358 : 38 __ __ SEC
2359 : a5 1b __ LDA ACCU + 0 
235b : e5 03 __ SBC WORK + 0 
235d : 85 1b __ STA ACCU + 0 
235f : a5 1c __ LDA ACCU + 1 
2361 : e5 04 __ SBC WORK + 1 
2363 : 85 1c __ STA ACCU + 1 
2365 : a5 1d __ LDA ACCU + 2 
2367 : e5 05 __ SBC WORK + 2 
2369 : 85 1d __ STA ACCU + 2 
236b : b0 19 __ BCS $2386
236d : 38 __ __ SEC
236e : a9 00 __ LDA #$00
2370 : e5 1b __ SBC ACCU + 0 
2372 : 85 1b __ STA ACCU + 0 
2374 : a9 00 __ LDA #$00
2376 : e5 1c __ SBC ACCU + 1 
2378 : 85 1c __ STA ACCU + 1 
237a : a9 00 __ LDA #$00
237c : e5 1d __ SBC ACCU + 2 
237e : 85 1d __ STA ACCU + 2 
2380 : a5 1e __ LDA ACCU + 3 
2382 : 49 80 __ EOR #$80
2384 : 85 1e __ STA ACCU + 3 
2386 : a5 1d __ LDA ACCU + 2 
2388 : 30 ba __ BMI $2344
238a : 05 1c __ ORA ACCU + 1 
238c : 05 1b __ ORA ACCU + 0 
238e : f0 0f __ BEQ $239f
2390 : c6 07 __ DEC WORK + 4 
2392 : f0 0b __ BEQ $239f
2394 : 06 1b __ ASL ACCU + 0 
2396 : 26 1c __ ROL ACCU + 1 
2398 : 26 1d __ ROL ACCU + 2 
239a : 10 f4 __ BPL $2390
239c : 4c 44 23 JMP $2344 ; (faddsub + 129)
239f : a9 00 __ LDA #$00
23a1 : 85 1b __ STA ACCU + 0 
23a3 : 85 1c __ STA ACCU + 1 
23a5 : 85 1d __ STA ACCU + 2 
23a7 : 85 1e __ STA ACCU + 3 
23a9 : 60 __ __ RTS
--------------------------------------------------------------------
fmul:
23aa : a5 1b __ LDA ACCU + 0 
23ac : 05 1c __ ORA ACCU + 1 
23ae : 05 1d __ ORA ACCU + 2 
23b0 : d0 03 __ BNE $23b5
23b2 : 85 1e __ STA ACCU + 3 
23b4 : 60 __ __ RTS
23b5 : a5 03 __ LDA WORK + 0 
23b7 : 05 04 __ ORA WORK + 1 
23b9 : 05 05 __ ORA WORK + 2 
23bb : d0 09 __ BNE $23c6
23bd : 85 1b __ STA ACCU + 0 
23bf : 85 1c __ STA ACCU + 1 
23c1 : 85 1d __ STA ACCU + 2 
23c3 : 85 1e __ STA ACCU + 3 
23c5 : 60 __ __ RTS
23c6 : a5 1e __ LDA ACCU + 3 
23c8 : 45 06 __ EOR WORK + 3 
23ca : 29 80 __ AND #$80
23cc : 85 1e __ STA ACCU + 3 
23ce : a9 ff __ LDA #$ff
23d0 : c5 07 __ CMP WORK + 4 
23d2 : f0 42 __ BEQ $2416
23d4 : c5 08 __ CMP WORK + 5 
23d6 : f0 3e __ BEQ $2416
23d8 : a9 00 __ LDA #$00
23da : 85 09 __ STA WORK + 6 
23dc : 85 0a __ STA WORK + 7 
23de : 85 0b __ STA $0b 
23e0 : a4 1b __ LDY ACCU + 0 
23e2 : a5 03 __ LDA WORK + 0 
23e4 : d0 06 __ BNE $23ec
23e6 : a5 04 __ LDA WORK + 1 
23e8 : f0 0a __ BEQ $23f4
23ea : d0 05 __ BNE $23f1
23ec : 20 4b 24 JSR $244b ; (fmul8 + 0)
23ef : a5 04 __ LDA WORK + 1 
23f1 : 20 4b 24 JSR $244b ; (fmul8 + 0)
23f4 : a5 05 __ LDA WORK + 2 
23f6 : 20 4b 24 JSR $244b ; (fmul8 + 0)
23f9 : 38 __ __ SEC
23fa : a5 0b __ LDA $0b 
23fc : 30 06 __ BMI $2404
23fe : 06 09 __ ASL WORK + 6 
2400 : 26 0a __ ROL WORK + 7 
2402 : 2a __ __ ROL
2403 : 18 __ __ CLC
2404 : 29 7f __ AND #$7f
2406 : 85 0b __ STA $0b 
2408 : a5 07 __ LDA WORK + 4 
240a : 65 08 __ ADC WORK + 5 
240c : 90 19 __ BCC $2427
240e : e9 7f __ SBC #$7f
2410 : b0 04 __ BCS $2416
2412 : c9 ff __ CMP #$ff
2414 : d0 15 __ BNE $242b
2416 : a5 1e __ LDA ACCU + 3 
2418 : 09 7f __ ORA #$7f
241a : 85 1e __ STA ACCU + 3 
241c : a9 80 __ LDA #$80
241e : 85 1d __ STA ACCU + 2 
2420 : a9 00 __ LDA #$00
2422 : 85 1b __ STA ACCU + 0 
2424 : 85 1c __ STA ACCU + 1 
2426 : 60 __ __ RTS
2427 : e9 7e __ SBC #$7e
2429 : 90 15 __ BCC $2440
242b : 4a __ __ LSR
242c : 05 1e __ ORA ACCU + 3 
242e : 85 1e __ STA ACCU + 3 
2430 : a9 00 __ LDA #$00
2432 : 6a __ __ ROR
2433 : 05 0b __ ORA $0b 
2435 : 85 1d __ STA ACCU + 2 
2437 : a5 0a __ LDA WORK + 7 
2439 : 85 1c __ STA ACCU + 1 
243b : a5 09 __ LDA WORK + 6 
243d : 85 1b __ STA ACCU + 0 
243f : 60 __ __ RTS
2440 : a9 00 __ LDA #$00
2442 : 85 1b __ STA ACCU + 0 
2444 : 85 1c __ STA ACCU + 1 
2446 : 85 1d __ STA ACCU + 2 
2448 : 85 1e __ STA ACCU + 3 
244a : 60 __ __ RTS
--------------------------------------------------------------------
fmul8:
244b : 38 __ __ SEC
244c : 6a __ __ ROR
244d : 90 1e __ BCC $246d
244f : aa __ __ TAX
2450 : 18 __ __ CLC
2451 : 98 __ __ TYA
2452 : 65 09 __ ADC WORK + 6 
2454 : 85 09 __ STA WORK + 6 
2456 : a5 0a __ LDA WORK + 7 
2458 : 65 1c __ ADC ACCU + 1 
245a : 85 0a __ STA WORK + 7 
245c : a5 0b __ LDA $0b 
245e : 65 1d __ ADC ACCU + 2 
2460 : 6a __ __ ROR
2461 : 85 0b __ STA $0b 
2463 : 8a __ __ TXA
2464 : 66 0a __ ROR WORK + 7 
2466 : 66 09 __ ROR WORK + 6 
2468 : 4a __ __ LSR
2469 : f0 0d __ BEQ $2478
246b : b0 e2 __ BCS $244f
246d : 66 0b __ ROR $0b 
246f : 66 0a __ ROR WORK + 7 
2471 : 66 09 __ ROR WORK + 6 
2473 : 4a __ __ LSR
2474 : 90 f7 __ BCC $246d
2476 : d0 d7 __ BNE $244f
2478 : 60 __ __ RTS
--------------------------------------------------------------------
fdiv:
2479 : a5 1b __ LDA ACCU + 0 
247b : 05 1c __ ORA ACCU + 1 
247d : 05 1d __ ORA ACCU + 2 
247f : d0 03 __ BNE $2484
2481 : 85 1e __ STA ACCU + 3 
2483 : 60 __ __ RTS
2484 : a5 1e __ LDA ACCU + 3 
2486 : 45 06 __ EOR WORK + 3 
2488 : 29 80 __ AND #$80
248a : 85 1e __ STA ACCU + 3 
248c : a5 08 __ LDA WORK + 5 
248e : f0 62 __ BEQ $24f2
2490 : a5 07 __ LDA WORK + 4 
2492 : c9 ff __ CMP #$ff
2494 : f0 5c __ BEQ $24f2
2496 : a9 00 __ LDA #$00
2498 : 85 09 __ STA WORK + 6 
249a : 85 0a __ STA WORK + 7 
249c : 85 0b __ STA $0b 
249e : a2 18 __ LDX #$18
24a0 : a5 1b __ LDA ACCU + 0 
24a2 : c5 03 __ CMP WORK + 0 
24a4 : a5 1c __ LDA ACCU + 1 
24a6 : e5 04 __ SBC WORK + 1 
24a8 : a5 1d __ LDA ACCU + 2 
24aa : e5 05 __ SBC WORK + 2 
24ac : 90 13 __ BCC $24c1
24ae : a5 1b __ LDA ACCU + 0 
24b0 : e5 03 __ SBC WORK + 0 
24b2 : 85 1b __ STA ACCU + 0 
24b4 : a5 1c __ LDA ACCU + 1 
24b6 : e5 04 __ SBC WORK + 1 
24b8 : 85 1c __ STA ACCU + 1 
24ba : a5 1d __ LDA ACCU + 2 
24bc : e5 05 __ SBC WORK + 2 
24be : 85 1d __ STA ACCU + 2 
24c0 : 38 __ __ SEC
24c1 : 26 09 __ ROL WORK + 6 
24c3 : 26 0a __ ROL WORK + 7 
24c5 : 26 0b __ ROL $0b 
24c7 : ca __ __ DEX
24c8 : f0 0a __ BEQ $24d4
24ca : 06 1b __ ASL ACCU + 0 
24cc : 26 1c __ ROL ACCU + 1 
24ce : 26 1d __ ROL ACCU + 2 
24d0 : b0 dc __ BCS $24ae
24d2 : 90 cc __ BCC $24a0
24d4 : 38 __ __ SEC
24d5 : a5 0b __ LDA $0b 
24d7 : 30 06 __ BMI $24df
24d9 : 06 09 __ ASL WORK + 6 
24db : 26 0a __ ROL WORK + 7 
24dd : 2a __ __ ROL
24de : 18 __ __ CLC
24df : 29 7f __ AND #$7f
24e1 : 85 0b __ STA $0b 
24e3 : a5 07 __ LDA WORK + 4 
24e5 : e5 08 __ SBC WORK + 5 
24e7 : 90 1a __ BCC $2503
24e9 : 18 __ __ CLC
24ea : 69 7f __ ADC #$7f
24ec : b0 04 __ BCS $24f2
24ee : c9 ff __ CMP #$ff
24f0 : d0 15 __ BNE $2507
24f2 : a5 1e __ LDA ACCU + 3 
24f4 : 09 7f __ ORA #$7f
24f6 : 85 1e __ STA ACCU + 3 
24f8 : a9 80 __ LDA #$80
24fa : 85 1d __ STA ACCU + 2 
24fc : a9 00 __ LDA #$00
24fe : 85 1c __ STA ACCU + 1 
2500 : 85 1b __ STA ACCU + 0 
2502 : 60 __ __ RTS
2503 : 69 7f __ ADC #$7f
2505 : 90 15 __ BCC $251c
2507 : 4a __ __ LSR
2508 : 05 1e __ ORA ACCU + 3 
250a : 85 1e __ STA ACCU + 3 
250c : a9 00 __ LDA #$00
250e : 6a __ __ ROR
250f : 05 0b __ ORA $0b 
2511 : 85 1d __ STA ACCU + 2 
2513 : a5 0a __ LDA WORK + 7 
2515 : 85 1c __ STA ACCU + 1 
2517 : a5 09 __ LDA WORK + 6 
2519 : 85 1b __ STA ACCU + 0 
251b : 60 __ __ RTS
251c : a9 00 __ LDA #$00
251e : 85 1e __ STA ACCU + 3 
2520 : 85 1d __ STA ACCU + 2 
2522 : 85 1c __ STA ACCU + 1 
2524 : 85 1b __ STA ACCU + 0 
2526 : 60 __ __ RTS
--------------------------------------------------------------------
negaccu:
2527 : 38 __ __ SEC
2528 : a9 00 __ LDA #$00
252a : e5 1b __ SBC ACCU + 0 
252c : 85 1b __ STA ACCU + 0 
252e : a9 00 __ LDA #$00
2530 : e5 1c __ SBC ACCU + 1 
2532 : 85 1c __ STA ACCU + 1 
2534 : 60 __ __ RTS
--------------------------------------------------------------------
negtmp:
2535 : 38 __ __ SEC
2536 : a9 00 __ LDA #$00
2538 : e5 03 __ SBC WORK + 0 
253a : 85 03 __ STA WORK + 0 
253c : a9 00 __ LDA #$00
253e : e5 04 __ SBC WORK + 1 
2540 : 85 04 __ STA WORK + 1 
2542 : 60 __ __ RTS
--------------------------------------------------------------------
divmod:
2543 : a5 1c __ LDA ACCU + 1 
2545 : d0 31 __ BNE $2578
2547 : a5 04 __ LDA WORK + 1 
2549 : d0 1e __ BNE $2569
254b : 85 06 __ STA WORK + 3 
254d : a2 04 __ LDX #$04
254f : 06 1b __ ASL ACCU + 0 
2551 : 2a __ __ ROL
2552 : c5 03 __ CMP WORK + 0 
2554 : 90 02 __ BCC $2558
2556 : e5 03 __ SBC WORK + 0 
2558 : 26 1b __ ROL ACCU + 0 
255a : 2a __ __ ROL
255b : c5 03 __ CMP WORK + 0 
255d : 90 02 __ BCC $2561
255f : e5 03 __ SBC WORK + 0 
2561 : 26 1b __ ROL ACCU + 0 
2563 : ca __ __ DEX
2564 : d0 eb __ BNE $2551
2566 : 85 05 __ STA WORK + 2 
2568 : 60 __ __ RTS
2569 : a5 1b __ LDA ACCU + 0 
256b : 85 05 __ STA WORK + 2 
256d : a5 1c __ LDA ACCU + 1 
256f : 85 06 __ STA WORK + 3 
2571 : a9 00 __ LDA #$00
2573 : 85 1b __ STA ACCU + 0 
2575 : 85 1c __ STA ACCU + 1 
2577 : 60 __ __ RTS
2578 : a5 04 __ LDA WORK + 1 
257a : d0 1f __ BNE $259b
257c : a5 03 __ LDA WORK + 0 
257e : 30 1b __ BMI $259b
2580 : a9 00 __ LDA #$00
2582 : 85 06 __ STA WORK + 3 
2584 : a2 10 __ LDX #$10
2586 : 06 1b __ ASL ACCU + 0 
2588 : 26 1c __ ROL ACCU + 1 
258a : 2a __ __ ROL
258b : c5 03 __ CMP WORK + 0 
258d : 90 02 __ BCC $2591
258f : e5 03 __ SBC WORK + 0 
2591 : 26 1b __ ROL ACCU + 0 
2593 : 26 1c __ ROL ACCU + 1 
2595 : ca __ __ DEX
2596 : d0 f2 __ BNE $258a
2598 : 85 05 __ STA WORK + 2 
259a : 60 __ __ RTS
259b : a9 00 __ LDA #$00
259d : 85 05 __ STA WORK + 2 
259f : 85 06 __ STA WORK + 3 
25a1 : 84 02 __ STY $02 
25a3 : a0 10 __ LDY #$10
25a5 : 18 __ __ CLC
25a6 : 26 1b __ ROL ACCU + 0 
25a8 : 26 1c __ ROL ACCU + 1 
25aa : 26 05 __ ROL WORK + 2 
25ac : 26 06 __ ROL WORK + 3 
25ae : 38 __ __ SEC
25af : a5 05 __ LDA WORK + 2 
25b1 : e5 03 __ SBC WORK + 0 
25b3 : aa __ __ TAX
25b4 : a5 06 __ LDA WORK + 3 
25b6 : e5 04 __ SBC WORK + 1 
25b8 : 90 04 __ BCC $25be
25ba : 86 05 __ STX WORK + 2 
25bc : 85 06 __ STA WORK + 3 
25be : 88 __ __ DEY
25bf : d0 e5 __ BNE $25a6
25c1 : 26 1b __ ROL ACCU + 0 
25c3 : 26 1c __ ROL ACCU + 1 
25c5 : a4 02 __ LDY $02 
25c7 : 60 __ __ RTS
--------------------------------------------------------------------
f32_to_i16:
25c8 : 20 a2 22 JSR $22a2 ; (freg + 36)
25cb : a5 07 __ LDA WORK + 4 
25cd : c9 7f __ CMP #$7f
25cf : b0 07 __ BCS $25d8
25d1 : a9 00 __ LDA #$00
25d3 : 85 1b __ STA ACCU + 0 
25d5 : 85 1c __ STA ACCU + 1 
25d7 : 60 __ __ RTS
25d8 : 38 __ __ SEC
25d9 : e9 8e __ SBC #$8e
25db : 90 0a __ BCC $25e7
25dd : a9 ff __ LDA #$ff
25df : 85 1b __ STA ACCU + 0 
25e1 : a9 7f __ LDA #$7f
25e3 : 85 1c __ STA ACCU + 1 
25e5 : d0 08 __ BNE $25ef
25e7 : aa __ __ TAX
25e8 : 46 1d __ LSR ACCU + 2 
25ea : 66 1c __ ROR ACCU + 1 
25ec : e8 __ __ INX
25ed : d0 f9 __ BNE $25e8
25ef : 24 1e __ BIT ACCU + 3 
25f1 : 10 0e __ BPL $2601
25f3 : 38 __ __ SEC
25f4 : a9 00 __ LDA #$00
25f6 : e5 1c __ SBC ACCU + 1 
25f8 : 85 1b __ STA ACCU + 0 
25fa : a9 00 __ LDA #$00
25fc : e5 1d __ SBC ACCU + 2 
25fe : 85 1c __ STA ACCU + 1 
2600 : 60 __ __ RTS
2601 : a5 1c __ LDA ACCU + 1 
2603 : 85 1b __ STA ACCU + 0 
2605 : a5 1d __ LDA ACCU + 2 
2607 : 85 1c __ STA ACCU + 1 
2609 : 60 __ __ RTS
--------------------------------------------------------------------
sint16_to_float:
260a : 24 1c __ BIT ACCU + 1 
260c : 30 03 __ BMI $2611
260e : 4c 28 26 JMP $2628 ; (uint16_to_float + 0)
2611 : 38 __ __ SEC
2612 : a9 00 __ LDA #$00
2614 : e5 1b __ SBC ACCU + 0 
2616 : 85 1b __ STA ACCU + 0 
2618 : a9 00 __ LDA #$00
261a : e5 1c __ SBC ACCU + 1 
261c : 85 1c __ STA ACCU + 1 
261e : 20 28 26 JSR $2628 ; (uint16_to_float + 0)
2621 : a5 1e __ LDA ACCU + 3 
2623 : 09 80 __ ORA #$80
2625 : 85 1e __ STA ACCU + 3 
2627 : 60 __ __ RTS
--------------------------------------------------------------------
uint16_to_float:
2628 : a5 1b __ LDA ACCU + 0 
262a : 05 1c __ ORA ACCU + 1 
262c : d0 05 __ BNE $2633
262e : 85 1d __ STA ACCU + 2 
2630 : 85 1e __ STA ACCU + 3 
2632 : 60 __ __ RTS
2633 : a2 8e __ LDX #$8e
2635 : a5 1c __ LDA ACCU + 1 
2637 : 30 06 __ BMI $263f
2639 : ca __ __ DEX
263a : 06 1b __ ASL ACCU + 0 
263c : 2a __ __ ROL
263d : 10 fa __ BPL $2639
263f : 29 7f __ AND #$7f
2641 : 85 1d __ STA ACCU + 2 
2643 : a5 1b __ LDA ACCU + 0 
2645 : 85 1c __ STA ACCU + 1 
2647 : 8a __ __ TXA
2648 : 4a __ __ LSR
2649 : 85 1e __ STA ACCU + 3 
264b : a9 00 __ LDA #$00
264d : 85 1b __ STA ACCU + 0 
264f : 6a __ __ ROR
2650 : 05 1d __ ORA ACCU + 2 
2652 : 85 1d __ STA ACCU + 2 
2654 : 60 __ __ RTS
--------------------------------------------------------------------
negaccu32:
2655 : 38 __ __ SEC
2656 : a9 00 __ LDA #$00
2658 : e5 1b __ SBC ACCU + 0 
265a : 85 1b __ STA ACCU + 0 
265c : a9 00 __ LDA #$00
265e : e5 1c __ SBC ACCU + 1 
2660 : 85 1c __ STA ACCU + 1 
2662 : a9 00 __ LDA #$00
2664 : e5 1d __ SBC ACCU + 2 
2666 : 85 1d __ STA ACCU + 2 
2668 : a9 00 __ LDA #$00
266a : e5 1e __ SBC ACCU + 3 
266c : 85 1e __ STA ACCU + 3 
266e : 60 __ __ RTS
--------------------------------------------------------------------
divmod32:
266f : 84 02 __ STY $02 
2671 : a0 20 __ LDY #$20
2673 : a9 00 __ LDA #$00
2675 : 85 07 __ STA WORK + 4 
2677 : 85 08 __ STA WORK + 5 
2679 : 85 09 __ STA WORK + 6 
267b : 85 0a __ STA WORK + 7 
267d : a5 05 __ LDA WORK + 2 
267f : 05 06 __ ORA WORK + 3 
2681 : d0 39 __ BNE $26bc
2683 : 18 __ __ CLC
2684 : 26 1b __ ROL ACCU + 0 
2686 : 26 1c __ ROL ACCU + 1 
2688 : 26 1d __ ROL ACCU + 2 
268a : 26 1e __ ROL ACCU + 3 
268c : 26 07 __ ROL WORK + 4 
268e : 26 08 __ ROL WORK + 5 
2690 : 90 0c __ BCC $269e
2692 : a5 07 __ LDA WORK + 4 
2694 : e5 03 __ SBC WORK + 0 
2696 : aa __ __ TAX
2697 : a5 08 __ LDA WORK + 5 
2699 : e5 04 __ SBC WORK + 1 
269b : 38 __ __ SEC
269c : b0 0c __ BCS $26aa
269e : 38 __ __ SEC
269f : a5 07 __ LDA WORK + 4 
26a1 : e5 03 __ SBC WORK + 0 
26a3 : aa __ __ TAX
26a4 : a5 08 __ LDA WORK + 5 
26a6 : e5 04 __ SBC WORK + 1 
26a8 : 90 04 __ BCC $26ae
26aa : 86 07 __ STX WORK + 4 
26ac : 85 08 __ STA WORK + 5 
26ae : 88 __ __ DEY
26af : d0 d3 __ BNE $2684
26b1 : 26 1b __ ROL ACCU + 0 
26b3 : 26 1c __ ROL ACCU + 1 
26b5 : 26 1d __ ROL ACCU + 2 
26b7 : 26 1e __ ROL ACCU + 3 
26b9 : a4 02 __ LDY $02 
26bb : 60 __ __ RTS
26bc : 18 __ __ CLC
26bd : 26 1b __ ROL ACCU + 0 
26bf : 26 1c __ ROL ACCU + 1 
26c1 : 26 1d __ ROL ACCU + 2 
26c3 : 26 1e __ ROL ACCU + 3 
26c5 : 26 07 __ ROL WORK + 4 
26c7 : 26 08 __ ROL WORK + 5 
26c9 : 26 09 __ ROL WORK + 6 
26cb : 26 0a __ ROL WORK + 7 
26cd : a5 07 __ LDA WORK + 4 
26cf : c5 03 __ CMP WORK + 0 
26d1 : a5 08 __ LDA WORK + 5 
26d3 : e5 04 __ SBC WORK + 1 
26d5 : a5 09 __ LDA WORK + 6 
26d7 : e5 05 __ SBC WORK + 2 
26d9 : a5 0a __ LDA WORK + 7 
26db : e5 06 __ SBC WORK + 3 
26dd : 90 18 __ BCC $26f7
26df : a5 07 __ LDA WORK + 4 
26e1 : e5 03 __ SBC WORK + 0 
26e3 : 85 07 __ STA WORK + 4 
26e5 : a5 08 __ LDA WORK + 5 
26e7 : e5 04 __ SBC WORK + 1 
26e9 : 85 08 __ STA WORK + 5 
26eb : a5 09 __ LDA WORK + 6 
26ed : e5 05 __ SBC WORK + 2 
26ef : 85 09 __ STA WORK + 6 
26f1 : a5 0a __ LDA WORK + 7 
26f3 : e5 06 __ SBC WORK + 3 
26f5 : 85 0a __ STA WORK + 7 
26f7 : 88 __ __ DEY
26f8 : d0 c3 __ BNE $26bd
26fa : 26 1b __ ROL ACCU + 0 
26fc : 26 1c __ ROL ACCU + 1 
26fe : 26 1d __ ROL ACCU + 2 
2700 : 26 1e __ ROL ACCU + 3 
2702 : a4 02 __ LDY $02 
2704 : 60 __ __ RTS
--------------------------------------------------------------------
inp_op_ext_u16:
2705 : a9 00 __ LDA #$00
2707 : 85 1d __ STA ACCU + 2 
2709 : 85 1e __ STA ACCU + 3 
270b : 60 __ __ RTS
--------------------------------------------------------------------
inp_binop_div_u32:
270c : b5 00 __ LDA $00,x 
270e : 85 03 __ STA WORK + 0 
2710 : b5 01 __ LDA $01,x 
2712 : 85 04 __ STA WORK + 1 
2714 : b5 02 __ LDA $02,x 
2716 : 85 05 __ STA WORK + 2 
2718 : b5 03 __ LDA WORK + 0,x 
271a : 85 06 __ STA WORK + 3 
271c : 20 6f 26 JSR $266f ; (divmod32 + 0)
271f : 60 __ __ RTS
--------------------------------------------------------------------
inp_binop_mod_u32:
2720 : b5 00 __ LDA $00,x 
2722 : 85 03 __ STA WORK + 0 
2724 : b5 01 __ LDA $01,x 
2726 : 85 04 __ STA WORK + 1 
2728 : b5 02 __ LDA $02,x 
272a : 85 05 __ STA WORK + 2 
272c : b5 03 __ LDA WORK + 0,x 
272e : 85 06 __ STA WORK + 3 
2730 : 20 6f 26 JSR $266f ; (divmod32 + 0)
2733 : a5 07 __ LDA WORK + 4 
2735 : 85 1b __ STA ACCU + 0 
2737 : a5 08 __ LDA WORK + 5 
2739 : 85 1c __ STA ACCU + 1 
273b : a5 09 __ LDA WORK + 6 
273d : 85 1d __ STA ACCU + 2 
273f : a5 0a __ LDA WORK + 7 
2741 : 85 1e __ STA ACCU + 3 
2743 : 60 __ __ RTS
--------------------------------------------------------------------
inp_op_cmp_u32:
2744 : b5 03 __ LDA WORK + 0,x 
2746 : c5 1e __ CMP ACCU + 3 
2748 : d0 20 __ BNE $276a
274a : b5 02 __ LDA $02,x 
274c : c5 1d __ CMP ACCU + 2 
274e : d0 1a __ BNE $276a
2750 : b5 01 __ LDA $01,x 
2752 : c5 1c __ CMP ACCU + 1 
2754 : d0 14 __ BNE $276a
2756 : b5 00 __ LDA $00,x 
2758 : c5 1b __ CMP ACCU + 0 
275a : d0 0e __ BNE $276a
275c : a9 00 __ LDA #$00
275e : 85 1b __ STA ACCU + 0 
2760 : 85 1c __ STA ACCU + 1 
2762 : 60 __ __ RTS
2763 : a9 ff __ LDA #$ff
2765 : 85 1b __ STA ACCU + 0 
2767 : 85 1c __ STA ACCU + 1 
2769 : 60 __ __ RTS
276a : 90 f7 __ BCC $2763
276c : a9 01 __ LDA #$01
276e : 85 1b __ STA ACCU + 0 
2770 : a9 00 __ LDA #$00
2772 : 85 1c __ STA ACCU + 1 
2774 : 60 __ __ RTS
--------------------------------------------------------------------
inp_op_cmp_s32:
2775 : a5 1e __ LDA ACCU + 3 
2777 : 49 80 __ EOR #$80
2779 : 85 1e __ STA ACCU + 3 
277b : b5 03 __ LDA WORK + 0,x 
277d : 49 80 __ EOR #$80
277f : c5 1e __ CMP ACCU + 3 
2781 : d0 20 __ BNE $27a3
2783 : b5 02 __ LDA $02,x 
2785 : c5 1d __ CMP ACCU + 2 
2787 : d0 1a __ BNE $27a3
2789 : b5 01 __ LDA $01,x 
278b : c5 1c __ CMP ACCU + 1 
278d : d0 14 __ BNE $27a3
278f : b5 00 __ LDA $00,x 
2791 : c5 1b __ CMP ACCU + 0 
2793 : d0 0e __ BNE $27a3
2795 : a9 00 __ LDA #$00
2797 : 85 1b __ STA ACCU + 0 
2799 : 85 1c __ STA ACCU + 1 
279b : 60 __ __ RTS
279c : a9 ff __ LDA #$ff
279e : 85 1b __ STA ACCU + 0 
27a0 : 85 1c __ STA ACCU + 1 
27a2 : 60 __ __ RTS
27a3 : 90 f7 __ BCC $279c
27a5 : a9 01 __ LDA #$01
27a7 : 85 1b __ STA ACCU + 0 
27a9 : a9 00 __ LDA #$00
27ab : 85 1c __ STA ACCU + 1 
27ad : 60 __ __ RTS
--------------------------------------------------------------------
inp_nop:
27ae : 4c 5e 08 JMP $085e ; (startup + 93)
--------------------------------------------------------------------
inp_const_8:
27b1 : b1 19 __ LDA (IP + 0),y 
27b3 : aa __ __ TAX
27b4 : c8 __ __ INY
27b5 : b1 19 __ LDA (IP + 0),y 
27b7 : 95 00 __ STA $00,x 
27b9 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_const_p8:
27bc : b1 19 __ LDA (IP + 0),y 
27be : aa __ __ TAX
27bf : c8 __ __ INY
27c0 : b1 19 __ LDA (IP + 0),y 
27c2 : 95 00 __ STA $00,x 
27c4 : a9 00 __ LDA #$00
27c6 : 95 01 __ STA $01,x 
27c8 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_const_16:
27cb : b1 19 __ LDA (IP + 0),y 
27cd : aa __ __ TAX
27ce : c8 __ __ INY
27cf : b1 19 __ LDA (IP + 0),y 
27d1 : 95 00 __ STA $00,x 
27d3 : c8 __ __ INY
27d4 : b1 19 __ LDA (IP + 0),y 
27d6 : 95 01 __ STA $01,x 
27d8 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_const_32:
27db : b1 19 __ LDA (IP + 0),y 
27dd : aa __ __ TAX
27de : c8 __ __ INY
27df : b1 19 __ LDA (IP + 0),y 
27e1 : 95 00 __ STA $00,x 
27e3 : c8 __ __ INY
27e4 : b1 19 __ LDA (IP + 0),y 
27e6 : 95 01 __ STA $01,x 
27e8 : c8 __ __ INY
27e9 : b1 19 __ LDA (IP + 0),y 
27eb : 95 02 __ STA $02,x 
27ed : c8 __ __ INY
27ee : b1 19 __ LDA (IP + 0),y 
27f0 : 95 03 __ STA WORK + 0,x 
27f2 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_load_reg_8:
27f5 : b1 19 __ LDA (IP + 0),y 
27f7 : aa __ __ TAX
27f8 : b5 00 __ LDA $00,x 
27fa : 85 1b __ STA ACCU + 0 
27fc : a9 00 __ LDA #$00
27fe : 85 1c __ STA ACCU + 1 
2800 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_store_reg_8:
2803 : b1 19 __ LDA (IP + 0),y 
2805 : aa __ __ TAX
2806 : a5 1b __ LDA ACCU + 0 
2808 : 95 00 __ STA $00,x 
280a : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_load_reg_16:
280d : b1 19 __ LDA (IP + 0),y 
280f : aa __ __ TAX
2810 : b5 00 __ LDA $00,x 
2812 : 85 1b __ STA ACCU + 0 
2814 : b5 01 __ LDA $01,x 
2816 : 85 1c __ STA ACCU + 1 
2818 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_store_reg_16:
281b : b1 19 __ LDA (IP + 0),y 
281d : aa __ __ TAX
281e : a5 1b __ LDA ACCU + 0 
2820 : 95 00 __ STA $00,x 
2822 : a5 1c __ LDA ACCU + 1 
2824 : 95 01 __ STA $01,x 
2826 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_addr_reg:
2829 : b1 19 __ LDA (IP + 0),y 
282b : aa __ __ TAX
282c : b5 00 __ LDA $00,x 
282e : 85 1f __ STA ADDR + 0 
2830 : b5 01 __ LDA $01,x 
2832 : 85 20 __ STA ADDR + 1 
2834 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_load_reg_32:
2837 : b1 19 __ LDA (IP + 0),y 
2839 : aa __ __ TAX
283a : b5 00 __ LDA $00,x 
283c : 85 1b __ STA ACCU + 0 
283e : b5 01 __ LDA $01,x 
2840 : 85 1c __ STA ACCU + 1 
2842 : b5 02 __ LDA $02,x 
2844 : 85 1d __ STA ACCU + 2 
2846 : b5 03 __ LDA WORK + 0,x 
2848 : 85 1e __ STA ACCU + 3 
284a : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_store_reg_32:
284d : b1 19 __ LDA (IP + 0),y 
284f : aa __ __ TAX
2850 : a5 1b __ LDA ACCU + 0 
2852 : 95 00 __ STA $00,x 
2854 : a5 1c __ LDA ACCU + 1 
2856 : 95 01 __ STA $01,x 
2858 : a5 1d __ LDA ACCU + 2 
285a : 95 02 __ STA $02,x 
285c : a5 1e __ LDA ACCU + 3 
285e : 95 03 __ STA WORK + 0,x 
2860 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_load_abs_8:
2863 : b1 19 __ LDA (IP + 0),y 
2865 : 85 1f __ STA ADDR + 0 
2867 : c8 __ __ INY
2868 : b1 19 __ LDA (IP + 0),y 
286a : 85 20 __ STA ADDR + 1 
286c : c8 __ __ INY
286d : b1 19 __ LDA (IP + 0),y 
286f : aa __ __ TAX
2870 : 84 02 __ STY $02 
2872 : a0 00 __ LDY #$00
2874 : b1 1f __ LDA (ADDR + 0),y 
2876 : 95 00 __ STA $00,x 
2878 : 4c 52 08 JMP $0852 ; (startup + 81)
287b : b1 19 __ LDA (IP + 0),y 
287d : aa __ __ TAX
287e : c8 __ __ INY
287f : b1 19 __ LDA (IP + 0),y 
2881 : 84 02 __ STY $02 
2883 : a8 __ __ TAY
2884 : 4c 74 28 JMP $2874 ; (inp_load_abs_8 + 17)
--------------------------------------------------------------------
inp_load_abs_u8:
2887 : b1 19 __ LDA (IP + 0),y 
2889 : 85 1f __ STA ADDR + 0 
288b : c8 __ __ INY
288c : b1 19 __ LDA (IP + 0),y 
288e : 85 20 __ STA ADDR + 1 
2890 : c8 __ __ INY
2891 : b1 19 __ LDA (IP + 0),y 
2893 : aa __ __ TAX
2894 : 84 02 __ STY $02 
2896 : a0 00 __ LDY #$00
2898 : b1 1f __ LDA (ADDR + 0),y 
289a : 95 00 __ STA $00,x 
289c : a9 00 __ LDA #$00
289e : 95 01 __ STA $01,x 
28a0 : 4c 52 08 JMP $0852 ; (startup + 81)
28a3 : b1 19 __ LDA (IP + 0),y 
28a5 : aa __ __ TAX
28a6 : c8 __ __ INY
28a7 : b1 19 __ LDA (IP + 0),y 
28a9 : 84 02 __ STY $02 
28ab : a8 __ __ TAY
28ac : 4c 98 28 JMP $2898 ; (inp_load_abs_u8 + 17)
--------------------------------------------------------------------
inp_load_abs_16:
28af : b1 19 __ LDA (IP + 0),y 
28b1 : 85 1f __ STA ADDR + 0 
28b3 : c8 __ __ INY
28b4 : b1 19 __ LDA (IP + 0),y 
28b6 : 85 20 __ STA ADDR + 1 
28b8 : c8 __ __ INY
28b9 : b1 19 __ LDA (IP + 0),y 
28bb : aa __ __ TAX
28bc : 84 02 __ STY $02 
28be : a0 00 __ LDY #$00
28c0 : b1 1f __ LDA (ADDR + 0),y 
28c2 : 95 00 __ STA $00,x 
28c4 : c8 __ __ INY
28c5 : b1 1f __ LDA (ADDR + 0),y 
28c7 : 95 01 __ STA $01,x 
28c9 : 4c 52 08 JMP $0852 ; (startup + 81)
28cc : b1 19 __ LDA (IP + 0),y 
28ce : aa __ __ TAX
28cf : c8 __ __ INY
28d0 : b1 19 __ LDA (IP + 0),y 
28d2 : 84 02 __ STY $02 
28d4 : a8 __ __ TAY
28d5 : 4c c0 28 JMP $28c0 ; (inp_load_abs_16 + 17)
--------------------------------------------------------------------
inp_load_abs_32:
28d8 : b1 19 __ LDA (IP + 0),y 
28da : 85 1f __ STA ADDR + 0 
28dc : c8 __ __ INY
28dd : b1 19 __ LDA (IP + 0),y 
28df : 85 20 __ STA ADDR + 1 
28e1 : c8 __ __ INY
28e2 : b1 19 __ LDA (IP + 0),y 
28e4 : aa __ __ TAX
28e5 : 84 02 __ STY $02 
28e7 : a0 00 __ LDY #$00
28e9 : b1 1f __ LDA (ADDR + 0),y 
28eb : 95 00 __ STA $00,x 
28ed : c8 __ __ INY
28ee : b1 1f __ LDA (ADDR + 0),y 
28f0 : 95 01 __ STA $01,x 
28f2 : c8 __ __ INY
28f3 : b1 1f __ LDA (ADDR + 0),y 
28f5 : 95 02 __ STA $02,x 
28f7 : c8 __ __ INY
28f8 : b1 1f __ LDA (ADDR + 0),y 
28fa : 95 03 __ STA WORK + 0,x 
28fc : 4c 52 08 JMP $0852 ; (startup + 81)
28ff : b1 19 __ LDA (IP + 0),y 
2901 : aa __ __ TAX
2902 : c8 __ __ INY
2903 : b1 19 __ LDA (IP + 0),y 
2905 : 84 02 __ STY $02 
2907 : a8 __ __ TAY
2908 : 4c e9 28 JMP $28e9 ; (inp_load_abs_32 + 17)
--------------------------------------------------------------------
inp_load_abs_addr:
290b : b1 19 __ LDA (IP + 0),y 
290d : 85 1f __ STA ADDR + 0 
290f : c8 __ __ INY
2910 : b1 19 __ LDA (IP + 0),y 
2912 : 85 20 __ STA ADDR + 1 
2914 : 84 02 __ STY $02 
2916 : a0 00 __ LDY #$00
2918 : b1 1f __ LDA (ADDR + 0),y 
291a : aa __ __ TAX
291b : c8 __ __ INY
291c : b1 1f __ LDA (ADDR + 0),y 
291e : 85 20 __ STA ADDR + 1 
2920 : 86 1f __ STX ADDR + 0 
2922 : 4c 52 08 JMP $0852 ; (startup + 81)
--------------------------------------------------------------------
inp_store_abs_8:
2925 : b1 19 __ LDA (IP + 0),y 
2927 : 85 1f __ STA ADDR + 0 
2929 : c8 __ __ INY
292a : b1 19 __ LDA (IP + 0),y 
292c : 85 20 __ STA ADDR + 1 
292e : c8 __ __ INY
292f : b1 19 __ LDA (IP + 0),y 
2931 : aa __ __ TAX
2932 : 84 02 __ STY $02 
2934 : a0 00 __ LDY #$00
2936 : b5 00 __ LDA $00,x 
2938 : 91 1f __ STA (ADDR + 0),y 
293a : 4c 52 08 JMP $0852 ; (startup + 81)
293d : b1 19 __ LDA (IP + 0),y 
293f : aa __ __ TAX
2940 : c8 __ __ INY
2941 : b1 19 __ LDA (IP + 0),y 
2943 : 84 02 __ STY $02 
2945 : a8 __ __ TAY
2946 : 4c 36 29 JMP $2936 ; (inp_store_abs_8 + 17)
--------------------------------------------------------------------
inp_store_abs_16:
2949 : b1 19 __ LDA (IP + 0),y 
294b : 85 1f __ STA ADDR + 0 
294d : c8 __ __ INY
294e : b1 19 __ LDA (IP + 0),y 
2950 : 85 20 __ STA ADDR + 1 
2952 : c8 __ __ INY
2953 : b1 19 __ LDA (IP + 0),y 
2955 : aa __ __ TAX
2956 : 84 02 __ STY $02 
2958 : a0 00 __ LDY #$00
295a : b5 00 __ LDA $00,x 
295c : 91 1f __ STA (ADDR + 0),y 
295e : c8 __ __ INY
295f : b5 01 __ LDA $01,x 
2961 : 91 1f __ STA (ADDR + 0),y 
2963 : 4c 52 08 JMP $0852 ; (startup + 81)
2966 : b1 19 __ LDA (IP + 0),y 
2968 : aa __ __ TAX
2969 : c8 __ __ INY
296a : b1 19 __ LDA (IP + 0),y 
296c : 84 02 __ STY $02 
296e : a8 __ __ TAY
296f : 4c 5a 29 JMP $295a ; (inp_store_abs_16 + 17)
--------------------------------------------------------------------
inp_store_abs_32:
2972 : b1 19 __ LDA (IP + 0),y 
2974 : 85 1f __ STA ADDR + 0 
2976 : c8 __ __ INY
2977 : b1 19 __ LDA (IP + 0),y 
2979 : 85 20 __ STA ADDR + 1 
297b : c8 __ __ INY
297c : b1 19 __ LDA (IP + 0),y 
297e : aa __ __ TAX
297f : 84 02 __ STY $02 
2981 : a0 00 __ LDY #$00
2983 : b5 00 __ LDA $00,x 
2985 : 91 1f __ STA (ADDR + 0),y 
2987 : c8 __ __ INY
2988 : b5 01 __ LDA $01,x 
298a : 91 1f __ STA (ADDR + 0),y 
298c : c8 __ __ INY
298d : b5 02 __ LDA $02,x 
298f : 91 1f __ STA (ADDR + 0),y 
2991 : c8 __ __ INY
2992 : b5 03 __ LDA WORK + 0,x 
2994 : 91 1f __ STA (ADDR + 0),y 
2996 : 4c 52 08 JMP $0852 ; (startup + 81)
2999 : b1 19 __ LDA (IP + 0),y 
299b : aa __ __ TAX
299c : c8 __ __ INY
299d : b1 19 __ LDA (IP + 0),y 
299f : 84 02 __ STY $02 
29a1 : a8 __ __ TAY
29a2 : 4c 83 29 JMP $2983 ; (inp_store_abs_32 + 17)
--------------------------------------------------------------------
inp_lea_abs:
29a5 : b1 19 __ LDA (IP + 0),y 
29a7 : aa __ __ TAX
29a8 : c8 __ __ INY
29a9 : b1 19 __ LDA (IP + 0),y 
29ab : 95 00 __ STA $00,x 
29ad : c8 __ __ INY
29ae : b1 19 __ LDA (IP + 0),y 
29b0 : 95 01 __ STA $01,x 
29b2 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_lea_abs_index:
29b5 : b1 19 __ LDA (IP + 0),y 
29b7 : aa __ __ TAX
29b8 : c8 __ __ INY
29b9 : 18 __ __ CLC
29ba : b5 00 __ LDA $00,x 
29bc : 71 19 __ ADC (IP + 0),y 
29be : 85 1f __ STA ADDR + 0 
29c0 : c8 __ __ INY
29c1 : b5 01 __ LDA $01,x 
29c3 : 71 19 __ ADC (IP + 0),y 
29c5 : 85 20 __ STA ADDR + 1 
29c7 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_lea_abs_index_u8:
29ca : b1 19 __ LDA (IP + 0),y 
29cc : aa __ __ TAX
29cd : c8 __ __ INY
29ce : 18 __ __ CLC
29cf : b5 00 __ LDA $00,x 
29d1 : 71 19 __ ADC (IP + 0),y 
29d3 : 85 1f __ STA ADDR + 0 
29d5 : c8 __ __ INY
29d6 : a9 00 __ LDA #$00
29d8 : 71 19 __ ADC (IP + 0),y 
29da : 85 20 __ STA ADDR + 1 
29dc : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_lea_accu_index:
29df : b1 19 __ LDA (IP + 0),y 
29e1 : aa __ __ TAX
29e2 : 18 __ __ CLC
29e3 : b5 00 __ LDA $00,x 
29e5 : 65 1b __ ADC ACCU + 0 
29e7 : 85 1f __ STA ADDR + 0 
29e9 : b5 01 __ LDA $01,x 
29eb : 65 1c __ ADC ACCU + 1 
29ed : 85 20 __ STA ADDR + 1 
29ef : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_load_local_8:
29f2 : b1 19 __ LDA (IP + 0),y 
29f4 : aa __ __ TAX
29f5 : c8 __ __ INY
29f6 : b1 19 __ LDA (IP + 0),y 
29f8 : 84 02 __ STY $02 
29fa : a8 __ __ TAY
29fb : b1 25 __ LDA (FP + 0),y 
29fd : 95 00 __ STA $00,x 
29ff : 4c 52 08 JMP $0852 ; (startup + 81)
--------------------------------------------------------------------
inp_load_local_u8:
2a02 : b1 19 __ LDA (IP + 0),y 
2a04 : aa __ __ TAX
2a05 : c8 __ __ INY
2a06 : b1 19 __ LDA (IP + 0),y 
2a08 : 84 02 __ STY $02 
2a0a : a8 __ __ TAY
2a0b : b1 25 __ LDA (FP + 0),y 
2a0d : 95 00 __ STA $00,x 
2a0f : a9 00 __ LDA #$00
2a11 : 95 01 __ STA $01,x 
2a13 : 4c 52 08 JMP $0852 ; (startup + 81)
--------------------------------------------------------------------
inp_load_local_16:
2a16 : b1 19 __ LDA (IP + 0),y 
2a18 : aa __ __ TAX
2a19 : c8 __ __ INY
2a1a : b1 19 __ LDA (IP + 0),y 
2a1c : 84 02 __ STY $02 
2a1e : a8 __ __ TAY
2a1f : b1 25 __ LDA (FP + 0),y 
2a21 : 95 00 __ STA $00,x 
2a23 : c8 __ __ INY
2a24 : b1 25 __ LDA (FP + 0),y 
2a26 : 95 01 __ STA $01,x 
2a28 : 4c 52 08 JMP $0852 ; (startup + 81)
--------------------------------------------------------------------
inp_load_local_32:
2a2b : b1 19 __ LDA (IP + 0),y 
2a2d : aa __ __ TAX
2a2e : c8 __ __ INY
2a2f : b1 19 __ LDA (IP + 0),y 
2a31 : 84 02 __ STY $02 
2a33 : a8 __ __ TAY
2a34 : b1 25 __ LDA (FP + 0),y 
2a36 : 95 00 __ STA $00,x 
2a38 : c8 __ __ INY
2a39 : b1 25 __ LDA (FP + 0),y 
2a3b : 95 01 __ STA $01,x 
2a3d : c8 __ __ INY
2a3e : b1 25 __ LDA (FP + 0),y 
2a40 : 95 02 __ STA $02,x 
2a42 : c8 __ __ INY
2a43 : b1 25 __ LDA (FP + 0),y 
2a45 : 95 03 __ STA WORK + 0,x 
2a47 : 4c 52 08 JMP $0852 ; (startup + 81)
--------------------------------------------------------------------
inp_store_local_16:
2a4a : b1 19 __ LDA (IP + 0),y 
2a4c : aa __ __ TAX
2a4d : c8 __ __ INY
2a4e : b1 19 __ LDA (IP + 0),y 
2a50 : 84 02 __ STY $02 
2a52 : a8 __ __ TAY
2a53 : b5 00 __ LDA $00,x 
2a55 : 91 25 __ STA (FP + 0),y 
2a57 : c8 __ __ INY
2a58 : b5 01 __ LDA $01,x 
2a5a : 91 25 __ STA (FP + 0),y 
2a5c : 4c 52 08 JMP $0852 ; (startup + 81)
--------------------------------------------------------------------
inp_store_local_32:
2a5f : b1 19 __ LDA (IP + 0),y 
2a61 : aa __ __ TAX
2a62 : c8 __ __ INY
2a63 : b1 19 __ LDA (IP + 0),y 
2a65 : 84 02 __ STY $02 
2a67 : a8 __ __ TAY
2a68 : b5 00 __ LDA $00,x 
2a6a : 91 25 __ STA (FP + 0),y 
2a6c : c8 __ __ INY
2a6d : b5 01 __ LDA $01,x 
2a6f : 91 25 __ STA (FP + 0),y 
2a71 : c8 __ __ INY
2a72 : b5 02 __ LDA $02,x 
2a74 : 91 25 __ STA (FP + 0),y 
2a76 : c8 __ __ INY
2a77 : b5 03 __ LDA WORK + 0,x 
2a79 : 91 25 __ STA (FP + 0),y 
2a7b : 4c 52 08 JMP $0852 ; (startup + 81)
--------------------------------------------------------------------
inp_lea_local:
2a7e : b1 19 __ LDA (IP + 0),y 
2a80 : aa __ __ TAX
2a81 : c8 __ __ INY
2a82 : 18 __ __ CLC
2a83 : b1 19 __ LDA (IP + 0),y 
2a85 : 65 25 __ ADC FP + 0 
2a87 : 95 00 __ STA $00,x 
2a89 : c8 __ __ INY
2a8a : b1 19 __ LDA (IP + 0),y 
2a8c : 65 26 __ ADC FP + 1 
2a8e : 95 01 __ STA $01,x 
2a90 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_store_frame_8:
2a93 : b1 19 __ LDA (IP + 0),y 
2a95 : aa __ __ TAX
2a96 : c8 __ __ INY
2a97 : b1 19 __ LDA (IP + 0),y 
2a99 : 84 02 __ STY $02 
2a9b : a8 __ __ TAY
2a9c : b5 00 __ LDA $00,x 
2a9e : 91 23 __ STA (SP + 0),y 
2aa0 : 4c 52 08 JMP $0852 ; (startup + 81)
--------------------------------------------------------------------
inp_store_frame_16:
2aa3 : b1 19 __ LDA (IP + 0),y 
2aa5 : aa __ __ TAX
2aa6 : c8 __ __ INY
2aa7 : b1 19 __ LDA (IP + 0),y 
2aa9 : 84 02 __ STY $02 
2aab : a8 __ __ TAY
2aac : b5 00 __ LDA $00,x 
2aae : 91 23 __ STA (SP + 0),y 
2ab0 : c8 __ __ INY
2ab1 : b5 01 __ LDA $01,x 
2ab3 : 91 23 __ STA (SP + 0),y 
2ab5 : 4c 52 08 JMP $0852 ; (startup + 81)
--------------------------------------------------------------------
inp_store_frame_32:
2ab8 : b1 19 __ LDA (IP + 0),y 
2aba : aa __ __ TAX
2abb : c8 __ __ INY
2abc : b1 19 __ LDA (IP + 0),y 
2abe : 84 02 __ STY $02 
2ac0 : a8 __ __ TAY
2ac1 : b5 00 __ LDA $00,x 
2ac3 : 91 23 __ STA (SP + 0),y 
2ac5 : c8 __ __ INY
2ac6 : b5 01 __ LDA $01,x 
2ac8 : 91 23 __ STA (SP + 0),y 
2aca : c8 __ __ INY
2acb : b5 02 __ LDA $02,x 
2acd : 91 23 __ STA (SP + 0),y 
2acf : c8 __ __ INY
2ad0 : b5 03 __ LDA WORK + 0,x 
2ad2 : 91 23 __ STA (SP + 0),y 
2ad4 : 4c 52 08 JMP $0852 ; (startup + 81)
--------------------------------------------------------------------
inp_binop_addr_16:
2ad7 : b1 19 __ LDA (IP + 0),y 
2ad9 : aa __ __ TAX
2ada : 18 __ __ CLC
2adb : a5 1b __ LDA ACCU + 0 
2add : 75 00 __ ADC $00,x 
2adf : 85 1b __ STA ACCU + 0 
2ae1 : a5 1c __ LDA ACCU + 1 
2ae3 : 75 01 __ ADC $01,x 
2ae5 : 85 1c __ STA ACCU + 1 
2ae7 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_subr_16:
2aea : b1 19 __ LDA (IP + 0),y 
2aec : aa __ __ TAX
2aed : 38 __ __ SEC
2aee : a5 1b __ LDA ACCU + 0 
2af0 : f5 00 __ SBC $00,x 
2af2 : 85 1b __ STA ACCU + 0 
2af4 : a5 1c __ LDA ACCU + 1 
2af6 : f5 01 __ SBC $01,x 
2af8 : 85 1c __ STA ACCU + 1 
2afa : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_mulr_16:
2afd : b1 19 __ LDA (IP + 0),y 
2aff : aa __ __ TAX
2b00 : a9 00 __ LDA #$00
2b02 : 85 05 __ STA WORK + 2 
2b04 : 85 06 __ STA WORK + 3 
2b06 : b5 00 __ LDA $00,x 
2b08 : 85 03 __ STA WORK + 0 
2b0a : b5 01 __ LDA $01,x 
2b0c : 85 04 __ STA WORK + 1 
2b0e : a2 10 __ LDX #$10
2b10 : 46 04 __ LSR WORK + 1 
2b12 : 66 03 __ ROR WORK + 0 
2b14 : 90 0d __ BCC $2b23
2b16 : 18 __ __ CLC
2b17 : a5 05 __ LDA WORK + 2 
2b19 : 65 1b __ ADC ACCU + 0 
2b1b : 85 05 __ STA WORK + 2 
2b1d : a5 06 __ LDA WORK + 3 
2b1f : 65 1c __ ADC ACCU + 1 
2b21 : 85 06 __ STA WORK + 3 
2b23 : 06 1b __ ASL ACCU + 0 
2b25 : 26 1c __ ROL ACCU + 1 
2b27 : ca __ __ DEX
2b28 : d0 e6 __ BNE $2b10
2b2a : a5 05 __ LDA WORK + 2 
2b2c : 85 1b __ STA ACCU + 0 
2b2e : a5 06 __ LDA WORK + 3 
2b30 : 85 1c __ STA ACCU + 1 
2b32 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_divr_u16:
2b35 : b1 19 __ LDA (IP + 0),y 
2b37 : aa __ __ TAX
2b38 : b5 00 __ LDA $00,x 
2b3a : 85 03 __ STA WORK + 0 
2b3c : b5 01 __ LDA $01,x 
2b3e : 85 04 __ STA WORK + 1 
2b40 : 20 43 25 JSR $2543 ; (divmod + 0)
2b43 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_modr_u16:
2b46 : b1 19 __ LDA (IP + 0),y 
2b48 : aa __ __ TAX
2b49 : b5 00 __ LDA $00,x 
2b4b : 85 03 __ STA WORK + 0 
2b4d : b5 01 __ LDA $01,x 
2b4f : 85 04 __ STA WORK + 1 
2b51 : 20 43 25 JSR $2543 ; (divmod + 0)
2b54 : a5 05 __ LDA WORK + 2 
2b56 : 85 1b __ STA ACCU + 0 
2b58 : a5 06 __ LDA WORK + 3 
2b5a : 85 1c __ STA ACCU + 1 
2b5c : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_divr_s16:
2b5f : b1 19 __ LDA (IP + 0),y 
2b61 : aa __ __ TAX
2b62 : b5 00 __ LDA $00,x 
2b64 : 85 03 __ STA WORK + 0 
2b66 : b5 01 __ LDA $01,x 
2b68 : 85 04 __ STA WORK + 1 
2b6a : 24 1c __ BIT ACCU + 1 
2b6c : 10 10 __ BPL $2b7e
2b6e : 20 27 25 JSR $2527 ; (negaccu + 0)
2b71 : 24 04 __ BIT WORK + 1 
2b73 : 10 10 __ BPL $2b85
2b75 : 20 35 25 JSR $2535 ; (negtmp + 0)
2b78 : 20 43 25 JSR $2543 ; (divmod + 0)
2b7b : 4c 54 08 JMP $0854 ; (startup + 83)
2b7e : 24 04 __ BIT WORK + 1 
2b80 : 10 f6 __ BPL $2b78
2b82 : 20 35 25 JSR $2535 ; (negtmp + 0)
2b85 : 20 43 25 JSR $2543 ; (divmod + 0)
2b88 : 20 27 25 JSR $2527 ; (negaccu + 0)
2b8b : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_modr_s16:
2b8e : b1 19 __ LDA (IP + 0),y 
2b90 : aa __ __ TAX
2b91 : b5 00 __ LDA $00,x 
2b93 : 85 03 __ STA WORK + 0 
2b95 : b5 01 __ LDA $01,x 
2b97 : 85 04 __ STA WORK + 1 
2b99 : 24 1c __ BIT ACCU + 1 
2b9b : 10 18 __ BPL $2bb5
2b9d : 20 27 25 JSR $2527 ; (negaccu + 0)
2ba0 : 24 04 __ BIT WORK + 1 
2ba2 : 10 18 __ BPL $2bbc
2ba4 : 20 35 25 JSR $2535 ; (negtmp + 0)
2ba7 : 20 43 25 JSR $2543 ; (divmod + 0)
2baa : a5 05 __ LDA WORK + 2 
2bac : 85 1b __ STA ACCU + 0 
2bae : a5 06 __ LDA WORK + 3 
2bb0 : 85 1c __ STA ACCU + 1 
2bb2 : 4c 54 08 JMP $0854 ; (startup + 83)
2bb5 : 24 04 __ BIT WORK + 1 
2bb7 : 10 ee __ BPL $2ba7
2bb9 : 20 35 25 JSR $2535 ; (negtmp + 0)
2bbc : 20 43 25 JSR $2543 ; (divmod + 0)
2bbf : a5 05 __ LDA WORK + 2 
2bc1 : 85 1b __ STA ACCU + 0 
2bc3 : a5 06 __ LDA WORK + 3 
2bc5 : 85 1c __ STA ACCU + 1 
2bc7 : 20 27 25 JSR $2527 ; (negaccu + 0)
2bca : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_adda_16:
2bcd : b1 19 __ LDA (IP + 0),y 
2bcf : aa __ __ TAX
2bd0 : 18 __ __ CLC
2bd1 : b5 00 __ LDA $00,x 
2bd3 : 65 1b __ ADC ACCU + 0 
2bd5 : 95 00 __ STA $00,x 
2bd7 : b5 01 __ LDA $01,x 
2bd9 : 65 1c __ ADC ACCU + 1 
2bdb : 95 01 __ STA $01,x 
2bdd : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_addi_16:
2be0 : b1 19 __ LDA (IP + 0),y 
2be2 : c8 __ __ INY
2be3 : aa __ __ TAX
2be4 : 18 __ __ CLC
2be5 : b5 00 __ LDA $00,x 
2be7 : 71 19 __ ADC (IP + 0),y 
2be9 : c8 __ __ INY
2bea : 95 00 __ STA $00,x 
2bec : b5 01 __ LDA $01,x 
2bee : 71 19 __ ADC (IP + 0),y 
2bf0 : 95 01 __ STA $01,x 
2bf2 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_subi_16:
2bf5 : b1 19 __ LDA (IP + 0),y 
2bf7 : c8 __ __ INY
2bf8 : aa __ __ TAX
2bf9 : 38 __ __ SEC
2bfa : b1 19 __ LDA (IP + 0),y 
2bfc : c8 __ __ INY
2bfd : f5 00 __ SBC $00,x 
2bff : 95 00 __ STA $00,x 
2c01 : b1 19 __ LDA (IP + 0),y 
2c03 : f5 01 __ SBC $01,x 
2c05 : 95 01 __ STA $01,x 
2c07 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_andi_16:
2c0a : b1 19 __ LDA (IP + 0),y 
2c0c : c8 __ __ INY
2c0d : aa __ __ TAX
2c0e : b5 00 __ LDA $00,x 
2c10 : 31 19 __ AND (IP + 0),y 
2c12 : c8 __ __ INY
2c13 : 95 00 __ STA $00,x 
2c15 : b5 01 __ LDA $01,x 
2c17 : 31 19 __ AND (IP + 0),y 
2c19 : 95 01 __ STA $01,x 
2c1b : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_muli8_16:
2c1e : b1 19 __ LDA (IP + 0),y 
2c20 : c8 __ __ INY
2c21 : aa __ __ TAX
2c22 : a9 00 __ LDA #$00
2c24 : 85 05 __ STA WORK + 2 
2c26 : 85 06 __ STA WORK + 3 
2c28 : b5 00 __ LDA $00,x 
2c2a : 85 03 __ STA WORK + 0 
2c2c : b5 01 __ LDA $01,x 
2c2e : 85 04 __ STA WORK + 1 
2c30 : b1 19 __ LDA (IP + 0),y 
2c32 : 4a __ __ LSR
2c33 : 85 07 __ STA WORK + 4 
2c35 : 90 0d __ BCC $2c44
2c37 : 18 __ __ CLC
2c38 : a5 05 __ LDA WORK + 2 
2c3a : 65 03 __ ADC WORK + 0 
2c3c : 85 05 __ STA WORK + 2 
2c3e : a5 06 __ LDA WORK + 3 
2c40 : 65 04 __ ADC WORK + 1 
2c42 : 85 06 __ STA WORK + 3 
2c44 : 06 03 __ ASL WORK + 0 
2c46 : 26 04 __ ROL WORK + 1 
2c48 : 46 07 __ LSR WORK + 4 
2c4a : b0 eb __ BCS $2c37
2c4c : d0 f6 __ BNE $2c44
2c4e : a5 05 __ LDA WORK + 2 
2c50 : 95 00 __ STA $00,x 
2c52 : a5 06 __ LDA WORK + 3 
2c54 : 95 01 __ STA $01,x 
2c56 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_addi_8:
2c59 : b1 19 __ LDA (IP + 0),y 
2c5b : c8 __ __ INY
2c5c : aa __ __ TAX
2c5d : 18 __ __ CLC
2c5e : b5 00 __ LDA $00,x 
2c60 : 71 19 __ ADC (IP + 0),y 
2c62 : 95 00 __ STA $00,x 
2c64 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_andi_8:
2c67 : b1 19 __ LDA (IP + 0),y 
2c69 : c8 __ __ INY
2c6a : aa __ __ TAX
2c6b : b5 00 __ LDA $00,x 
2c6d : 31 19 __ AND (IP + 0),y 
2c6f : 95 00 __ STA $00,x 
2c71 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_shl_16:
2c74 : b1 19 __ LDA (IP + 0),y 
2c76 : aa __ __ TAX
2c77 : b5 00 __ LDA $00,x 
2c79 : 2c b1 19 BIT $19b1 ; (string_to_number + 115)
2c7c : 29 0f __ AND #$0f
2c7e : f0 0b __ BEQ $2c8b
2c80 : aa __ __ TAX
2c81 : a5 1c __ LDA ACCU + 1 
2c83 : 06 1b __ ASL ACCU + 0 
2c85 : 2a __ __ ROL
2c86 : ca __ __ DEX
2c87 : d0 fa __ BNE $2c83
2c89 : 85 1c __ STA ACCU + 1 
2c8b : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_binop_shr_u16:
2c8e : b1 19 __ LDA (IP + 0),y 
2c90 : aa __ __ TAX
2c91 : b5 00 __ LDA $00,x 
2c93 : 2c b1 19 BIT $19b1 ; (string_to_number + 115)
2c96 : 29 0f __ AND #$0f
2c98 : f0 0b __ BEQ $2ca5
2c9a : aa __ __ TAX
2c9b : a5 1c __ LDA ACCU + 1 
2c9d : 4a __ __ LSR
2c9e : 66 1b __ ROR ACCU + 0 
2ca0 : ca __ __ DEX
2ca1 : d0 fa __ BNE $2c9d
2ca3 : 85 1c __ STA ACCU + 1 
2ca5 : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
cmp16:
2ca8 : b1 19 __ LDA (IP + 0),y 
2caa : aa __ __ TAX
2cab : 38 __ __ SEC
2cac : b5 01 __ LDA $01,x 
2cae : e5 1c __ SBC ACCU + 1 
2cb0 : f0 11 __ BEQ $2cc3
2cb2 : 50 02 __ BVC $2cb6
2cb4 : 49 80 __ EOR #$80
2cb6 : 30 2a __ BMI $2ce2
2cb8 : 10 33 __ BPL $2ced
2cba : b1 19 __ LDA (IP + 0),y 
2cbc : aa __ __ TAX
2cbd : b5 01 __ LDA $01,x 
2cbf : c5 1c __ CMP ACCU + 1 
2cc1 : d0 28 __ BNE $2ceb
2cc3 : b5 00 __ LDA $00,x 
2cc5 : c5 1b __ CMP ACCU + 0 
2cc7 : d0 22 __ BNE $2ceb
2cc9 : f0 0e __ BEQ $2cd9
2ccb : b1 19 __ LDA (IP + 0),y 
2ccd : aa __ __ TAX
2cce : c8 __ __ INY
2ccf : b1 19 __ LDA (IP + 0),y 
2cd1 : c5 1c __ CMP ACCU + 1 
2cd3 : d0 16 __ BNE $2ceb
2cd5 : e4 1b __ CPX ACCU + 0 
2cd7 : d0 12 __ BNE $2ceb
2cd9 : a9 00 __ LDA #$00
2cdb : 85 1b __ STA ACCU + 0 
2cdd : 85 1c __ STA ACCU + 1 
2cdf : 4c 54 08 JMP $0854 ; (startup + 83)
2ce2 : a9 ff __ LDA #$ff
2ce4 : 85 1b __ STA ACCU + 0 
2ce6 : 85 1c __ STA ACCU + 1 
2ce8 : 4c 54 08 JMP $0854 ; (startup + 83)
2ceb : 90 f5 __ BCC $2ce2
2ced : a9 01 __ LDA #$01
2cef : 85 1b __ STA ACCU + 0 
2cf1 : a9 00 __ LDA #$00
2cf3 : 85 1c __ STA ACCU + 1 
2cf5 : 4c 54 08 JMP $0854 ; (startup + 83)
2cf8 : b1 19 __ LDA (IP + 0),y 
2cfa : c8 __ __ INY
2cfb : aa __ __ TAX
2cfc : b1 19 __ LDA (IP + 0),y 
2cfe : 38 __ __ SEC
2cff : e5 1c __ SBC ACCU + 1 
2d01 : d0 af __ BNE $2cb2
2d03 : e4 1b __ CPX ACCU + 0 
2d05 : d0 e4 __ BNE $2ceb
2d07 : f0 d0 __ BEQ $2cd9
2d09 : 60 __ __ RTS
--------------------------------------------------------------------
cmp8:
2d0a : b1 19 __ LDA (IP + 0),y 
2d0c : aa __ __ TAX
2d0d : 38 __ __ SEC
2d0e : b5 00 __ LDA $00,x 
2d10 : e5 1b __ SBC ACCU + 0 
2d12 : f0 19 __ BEQ $2d2d
2d14 : 50 02 __ BVC $2d18
2d16 : 49 80 __ EOR #$80
2d18 : 30 1c __ BMI $2d36
2d1a : 10 25 __ BPL $2d41
2d1c : b1 19 __ LDA (IP + 0),y 
2d1e : aa __ __ TAX
2d1f : b5 00 __ LDA $00,x 
2d21 : c5 1b __ CMP ACCU + 0 
2d23 : d0 1a __ BNE $2d3f
2d25 : f0 06 __ BEQ $2d2d
2d27 : b1 19 __ LDA (IP + 0),y 
2d29 : c5 1b __ CMP ACCU + 0 
2d2b : d0 12 __ BNE $2d3f
2d2d : a9 00 __ LDA #$00
2d2f : 85 1b __ STA ACCU + 0 
2d31 : 85 1c __ STA ACCU + 1 
2d33 : 4c 54 08 JMP $0854 ; (startup + 83)
2d36 : a9 ff __ LDA #$ff
2d38 : 85 1b __ STA ACCU + 0 
2d3a : 85 1c __ STA ACCU + 1 
2d3c : 4c 54 08 JMP $0854 ; (startup + 83)
2d3f : 90 f5 __ BCC $2d36
2d41 : a9 01 __ LDA #$01
2d43 : 85 1b __ STA ACCU + 0 
2d45 : a9 00 __ LDA #$00
2d47 : 85 1c __ STA ACCU + 1 
2d49 : 4c 54 08 JMP $0854 ; (startup + 83)
2d4c : b1 19 __ LDA (IP + 0),y 
2d4e : 38 __ __ SEC
2d4f : e5 1b __ SBC ACCU + 0 
2d51 : d0 c1 __ BNE $2d14
2d53 : f0 d8 __ BEQ $2d2d
2d55 : 60 __ __ RTS
--------------------------------------------------------------------
inp_op_negate_16:
2d56 : 38 __ __ SEC
2d57 : a9 00 __ LDA #$00
2d59 : e5 1b __ SBC ACCU + 0 
2d5b : 85 1b __ STA ACCU + 0 
2d5d : a9 00 __ LDA #$00
2d5f : e5 1c __ SBC ACCU + 1 
2d61 : 85 1c __ STA ACCU + 1 
2d63 : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_op_invert_16:
2d66 : a5 1b __ LDA ACCU + 0 
2d68 : 49 ff __ EOR #$ff
2d6a : 85 1b __ STA ACCU + 0 
2d6c : a5 1c __ LDA ACCU + 1 
2d6e : 49 ff __ EOR #$ff
2d70 : 85 1c __ STA ACCU + 1 
2d72 : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_binop_add_f32:
2d75 : 20 7e 22 JSR $227e ; (freg + 0)
2d78 : 20 c3 22 JSR $22c3 ; (faddsub + 0)
2d7b : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_binop_sub_f32:
2d7e : 20 7e 22 JSR $227e ; (freg + 0)
2d81 : a5 06 __ LDA WORK + 3 
2d83 : 49 80 __ EOR #$80
2d85 : 85 06 __ STA WORK + 3 
2d87 : 20 c3 22 JSR $22c3 ; (faddsub + 0)
2d8a : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_binop_mul_f32:
2d8d : 20 7e 22 JSR $227e ; (freg + 0)
2d90 : 84 02 __ STY $02 
2d92 : 20 aa 23 JSR $23aa ; (fmul + 0)
2d95 : a4 02 __ LDY $02 
2d97 : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_binop_div_f32:
2d9a : 20 7e 22 JSR $227e ; (freg + 0)
2d9d : 20 79 24 JSR $2479 ; (fdiv + 0)
2da0 : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_binop_cmp_f32:
2da3 : b1 19 __ LDA (IP + 0),y 
2da5 : c8 __ __ INY
2da6 : aa __ __ TAX
2da7 : a5 1e __ LDA ACCU + 3 
2da9 : 55 03 __ EOR WORK + 0,x 
2dab : 10 1e __ BPL $2dcb
2dad : a5 1e __ LDA ACCU + 3 
2daf : 29 7f __ AND #$7f
2db1 : 05 1d __ ORA ACCU + 2 
2db3 : 05 1c __ ORA ACCU + 1 
2db5 : 05 1b __ ORA ACCU + 0 
2db7 : d0 0c __ BNE $2dc5
2db9 : b5 03 __ LDA WORK + 0,x 
2dbb : 29 7f __ AND #$7f
2dbd : 15 02 __ ORA $02,x 
2dbf : 15 01 __ ORA $01,x 
2dc1 : 15 00 __ ORA $00,x 
2dc3 : f0 1e __ BEQ $2de3
2dc5 : a5 1e __ LDA ACCU + 3 
2dc7 : 30 29 __ BMI $2df2
2dc9 : 10 36 __ BPL $2e01
2dcb : a5 1e __ LDA ACCU + 3 
2dcd : d5 03 __ CMP WORK + 0,x 
2dcf : d0 1b __ BNE $2dec
2dd1 : a5 1d __ LDA ACCU + 2 
2dd3 : d5 02 __ CMP $02,x 
2dd5 : d0 15 __ BNE $2dec
2dd7 : a5 1c __ LDA ACCU + 1 
2dd9 : d5 01 __ CMP $01,x 
2ddb : d0 0f __ BNE $2dec
2ddd : a5 1b __ LDA ACCU + 0 
2ddf : d5 00 __ CMP $00,x 
2de1 : d0 09 __ BNE $2dec
2de3 : a9 00 __ LDA #$00
2de5 : 85 1b __ STA ACCU + 0 
2de7 : 85 1c __ STA ACCU + 1 
2de9 : 4c 55 08 JMP $0855 ; (startup + 84)
2dec : b0 0f __ BCS $2dfd
2dee : 24 1e __ BIT ACCU + 3 
2df0 : 30 0f __ BMI $2e01
2df2 : a9 00 __ LDA #$00
2df4 : 85 1c __ STA ACCU + 1 
2df6 : a9 01 __ LDA #$01
2df8 : 85 1b __ STA ACCU + 0 
2dfa : 4c 55 08 JMP $0855 ; (startup + 84)
2dfd : 24 1e __ BIT ACCU + 3 
2dff : 30 f1 __ BMI $2df2
2e01 : a9 ff __ LDA #$ff
2e03 : 85 1b __ STA ACCU + 0 
2e05 : 85 1c __ STA ACCU + 1 
2e07 : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_op_negate_f32:
2e0a : a5 1e __ LDA ACCU + 3 
2e0c : 49 80 __ EOR #$80
2e0e : 85 1e __ STA ACCU + 3 
2e10 : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_conv_i16_f32:
2e13 : 20 0a 26 JSR $260a ; (sint16_to_float + 0)
2e16 : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_conv_f32_i16:
2e19 : 20 c8 25 JSR $25c8 ; (f32_to_i16 + 0)
2e1c : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
bra:
2e1f : b1 19 __ LDA (IP + 0),y 
2e21 : 30 0c __ BMI $2e2f
2e23 : 38 __ __ SEC
2e24 : 65 19 __ ADC IP + 0 
2e26 : 85 19 __ STA IP + 0 
2e28 : 90 02 __ BCC $2e2c
2e2a : e6 1a __ INC IP + 1 
2e2c : 4c 5e 08 JMP $085e ; (startup + 93)
2e2f : 38 __ __ SEC
2e30 : 65 19 __ ADC IP + 0 
2e32 : 85 19 __ STA IP + 0 
2e34 : b0 02 __ BCS $2e38
2e36 : c6 1a __ DEC IP + 1 
2e38 : 4c 5e 08 JMP $085e ; (startup + 93)
2e3b : a5 1b __ LDA ACCU + 0 
2e3d : 05 1c __ ORA ACCU + 1 
2e3f : f0 de __ BEQ $2e1f
2e41 : 4c 54 08 JMP $0854 ; (startup + 83)
2e44 : a5 1b __ LDA ACCU + 0 
2e46 : 05 1c __ ORA ACCU + 1 
2e48 : d0 d5 __ BNE $2e1f
2e4a : 4c 54 08 JMP $0854 ; (startup + 83)
2e4d : a5 1c __ LDA ACCU + 1 
2e4f : 30 04 __ BMI $2e55
2e51 : 05 1b __ ORA ACCU + 0 
2e53 : d0 ca __ BNE $2e1f
2e55 : 4c 54 08 JMP $0854 ; (startup + 83)
2e58 : a5 1c __ LDA ACCU + 1 
2e5a : 10 c3 __ BPL $2e1f
2e5c : 4c 54 08 JMP $0854 ; (startup + 83)
2e5f : a5 1c __ LDA ACCU + 1 
2e61 : 30 bc __ BMI $2e1f
2e63 : 4c 54 08 JMP $0854 ; (startup + 83)
2e66 : a5 1c __ LDA ACCU + 1 
2e68 : 30 b5 __ BMI $2e1f
2e6a : 05 1b __ ORA ACCU + 0 
2e6c : f0 b1 __ BEQ $2e1f
2e6e : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
braf:
2e71 : 38 __ __ SEC
2e72 : b1 19 __ LDA (IP + 0),y 
2e74 : 65 19 __ ADC IP + 0 
2e76 : aa __ __ TAX
2e77 : c8 __ __ INY
2e78 : b1 19 __ LDA (IP + 0),y 
2e7a : 65 1a __ ADC IP + 1 
2e7c : 85 1a __ STA IP + 1 
2e7e : 86 19 __ STX IP + 0 
2e80 : 4c 5e 08 JMP $085e ; (startup + 93)
2e83 : a5 1b __ LDA ACCU + 0 
2e85 : 05 1c __ ORA ACCU + 1 
2e87 : f0 e8 __ BEQ $2e71
2e89 : c8 __ __ INY
2e8a : 4c 54 08 JMP $0854 ; (startup + 83)
2e8d : a5 1b __ LDA ACCU + 0 
2e8f : 05 1c __ ORA ACCU + 1 
2e91 : d0 de __ BNE $2e71
2e93 : c8 __ __ INY
2e94 : 4c 54 08 JMP $0854 ; (startup + 83)
2e97 : a5 1c __ LDA ACCU + 1 
2e99 : 30 04 __ BMI $2e9f
2e9b : 05 1b __ ORA ACCU + 0 
2e9d : d0 d2 __ BNE $2e71
2e9f : c8 __ __ INY
2ea0 : 4c 54 08 JMP $0854 ; (startup + 83)
2ea3 : a5 1c __ LDA ACCU + 1 
2ea5 : 10 ca __ BPL $2e71
2ea7 : c8 __ __ INY
2ea8 : 4c 54 08 JMP $0854 ; (startup + 83)
2eab : a5 1c __ LDA ACCU + 1 
2ead : 30 c2 __ BMI $2e71
2eaf : c8 __ __ INY
2eb0 : 4c 54 08 JMP $0854 ; (startup + 83)
2eb3 : a5 1c __ LDA ACCU + 1 
2eb5 : 30 ba __ BMI $2e71
2eb7 : 05 1b __ ORA ACCU + 0 
2eb9 : f0 b6 __ BEQ $2e71
2ebb : c8 __ __ INY
2ebc : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
loopu8:
2ebf : b1 19 __ LDA (IP + 0),y 
2ec1 : aa __ __ TAX
2ec2 : f6 00 __ INC $00,x 
2ec4 : c8 __ __ INY
2ec5 : b1 19 __ LDA (IP + 0),y 
2ec7 : d5 00 __ CMP $00,x 
2ec9 : 4c 2b 2d JMP $2d2b ; (cmp8 + 33)
--------------------------------------------------------------------
inp_jsr:
2ecc : b1 19 __ LDA (IP + 0),y 
2ece : 8d e2 2e STA $2ee2 ; (inp_jsr + 22)
2ed1 : c8 __ __ INY
2ed2 : b1 19 __ LDA (IP + 0),y 
2ed4 : 8d e3 2e STA $2ee3 ; (inp_jsr + 23)
2ed7 : 98 __ __ TYA
2ed8 : 38 __ __ SEC
2ed9 : 65 19 __ ADC IP + 0 
2edb : 85 19 __ STA IP + 0 
2edd : 90 02 __ BCC $2ee1
2edf : e6 1a __ INC IP + 1 
2ee1 : 20 00 00 JSR $0000 
2ee4 : 4c 4e 08 JMP $084e ; (startup + 77)
--------------------------------------------------------------------
inp_native:
2ee7 : 98 __ __ TYA
2ee8 : 18 __ __ CLC
2ee9 : 65 19 __ ADC IP + 0 
2eeb : 8d f6 2e STA $2ef6 ; (inp_native + 15)
2eee : a5 1a __ LDA IP + 1 
2ef0 : 69 00 __ ADC #$00
2ef2 : 8d f7 2e STA $2ef7 ; (inp_native + 16)
2ef5 : 20 00 00 JSR $0000 
2ef8 : a0 00 __ LDY #$00
2efa : b1 23 __ LDA (SP + 0),y 
2efc : 85 19 __ STA IP + 0 
2efe : c8 __ __ INY
2eff : b1 23 __ LDA (SP + 0),y 
2f01 : 85 1a __ STA IP + 1 
2f03 : 88 __ __ DEY
2f04 : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_enter:
2f07 : 38 __ __ SEC
2f08 : a5 23 __ LDA SP + 0 
2f0a : f1 19 __ SBC (IP + 0),y 
2f0c : c8 __ __ INY
2f0d : 85 23 __ STA SP + 0 
2f0f : a5 24 __ LDA SP + 1 
2f11 : f1 19 __ SBC (IP + 0),y 
2f13 : c8 __ __ INY
2f14 : 85 24 __ STA SP + 1 
2f16 : b1 19 __ LDA (IP + 0),y 
2f18 : 84 02 __ STY $02 
2f1a : a8 __ __ TAY
2f1b : a5 25 __ LDA FP + 0 
2f1d : 91 23 __ STA (SP + 0),y 
2f1f : c8 __ __ INY
2f20 : a5 26 __ LDA FP + 1 
2f22 : 91 23 __ STA (SP + 0),y 
2f24 : 98 __ __ TYA
2f25 : 38 __ __ SEC
2f26 : 65 23 __ ADC SP + 0 
2f28 : 85 25 __ STA FP + 0 
2f2a : a9 00 __ LDA #$00
2f2c : 65 24 __ ADC SP + 1 
2f2e : 85 26 __ STA FP + 1 
2f30 : 88 __ __ DEY
2f31 : f0 08 __ BEQ $2f3b
2f33 : b9 52 00 LDA $0052,y 
2f36 : 88 __ __ DEY
2f37 : 91 23 __ STA (SP + 0),y 
2f39 : d0 f8 __ BNE $2f33
2f3b : a4 02 __ LDY $02 
2f3d : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_return:
2f40 : b1 19 __ LDA (IP + 0),y 
2f42 : c8 __ __ INY
2f43 : 84 02 __ STY $02 
2f45 : a8 __ __ TAY
2f46 : b1 23 __ LDA (SP + 0),y 
2f48 : 85 25 __ STA FP + 0 
2f4a : c8 __ __ INY
2f4b : b1 23 __ LDA (SP + 0),y 
2f4d : 85 26 __ STA FP + 1 
2f4f : 88 __ __ DEY
2f50 : f0 09 __ BEQ $2f5b
2f52 : 88 __ __ DEY
2f53 : b1 23 __ LDA (SP + 0),y 
2f55 : 99 53 00 STA $0053,y 
2f58 : 88 __ __ DEY
2f59 : 10 f8 __ BPL $2f53
2f5b : a4 02 __ LDY $02 
2f5d : 18 __ __ CLC
2f5e : b1 19 __ LDA (IP + 0),y 
2f60 : c8 __ __ INY
2f61 : 65 23 __ ADC SP + 0 
2f63 : 85 23 __ STA SP + 0 
2f65 : b1 19 __ LDA (IP + 0),y 
2f67 : c8 __ __ INY
2f68 : 65 24 __ ADC SP + 1 
2f6a : 85 24 __ STA SP + 1 
2f6c : a0 01 __ LDY #$01
2f6e : b1 23 __ LDA (SP + 0),y 
2f70 : 85 1a __ STA IP + 1 
2f72 : 88 __ __ DEY
2f73 : b1 23 __ LDA (SP + 0),y 
2f75 : 85 19 __ STA IP + 0 
2f77 : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_call:
2f7a : b1 19 __ LDA (IP + 0),y 
2f7c : 85 1f __ STA ADDR + 0 
2f7e : c8 __ __ INY
2f7f : b1 19 __ LDA (IP + 0),y 
2f81 : 85 20 __ STA ADDR + 1 
2f83 : c8 __ __ INY
2f84 : 98 __ __ TYA
2f85 : a0 00 __ LDY #$00
2f87 : 18 __ __ CLC
2f88 : 65 19 __ ADC IP + 0 
2f8a : 91 23 __ STA (SP + 0),y 
2f8c : c8 __ __ INY
2f8d : a5 1a __ LDA IP + 1 
2f8f : 69 00 __ ADC #$00
2f91 : 91 23 __ STA (SP + 0),y 
2f93 : a5 1f __ LDA ADDR + 0 
2f95 : 85 19 __ STA IP + 0 
2f97 : a5 20 __ LDA ADDR + 1 
2f99 : 85 1a __ STA IP + 1 
2f9b : 4c 4e 08 JMP $084e ; (startup + 77)
--------------------------------------------------------------------
inp_push_frame:
2f9e : 38 __ __ SEC
2f9f : a5 23 __ LDA SP + 0 
2fa1 : f1 19 __ SBC (IP + 0),y 
2fa3 : c8 __ __ INY
2fa4 : 85 23 __ STA SP + 0 
2fa6 : a5 24 __ LDA SP + 1 
2fa8 : f1 19 __ SBC (IP + 0),y 
2faa : 85 24 __ STA SP + 1 
2fac : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_pop_frame:
2faf : 18 __ __ CLC
2fb0 : b1 19 __ LDA (IP + 0),y 
2fb2 : c8 __ __ INY
2fb3 : 65 23 __ ADC SP + 0 
2fb5 : 85 23 __ STA SP + 0 
2fb7 : b1 19 __ LDA (IP + 0),y 
2fb9 : 65 24 __ ADC SP + 1 
2fbb : 85 24 __ STA SP + 1 
2fbd : 4c 54 08 JMP $0854 ; (startup + 83)
--------------------------------------------------------------------
inp_strcpy:
2fc0 : 84 02 __ STY $02 
2fc2 : a0 ff __ LDY #$ff
2fc4 : c8 __ __ INY
2fc5 : b1 1b __ LDA (ACCU + 0),y 
2fc7 : 91 1f __ STA (ADDR + 0),y 
2fc9 : d0 f9 __ BNE $2fc4
2fcb : a4 02 __ LDY $02 
2fcd : 4c 55 08 JMP $0855 ; (startup + 84)
--------------------------------------------------------------------
inp_op_extrt:
2fd0 : b1 19 __ LDA (IP + 0),y 
2fd2 : c8 __ __ INY
2fd3 : 8d e1 2f STA $2fe1 ; (inp_op_extrt + 17)
2fd6 : b1 19 __ LDA (IP + 0),y 
2fd8 : c8 __ __ INY
2fd9 : 8d e2 2f STA $2fe2 ; (inp_op_extrt + 18)
2fdc : b1 19 __ LDA (IP + 0),y 
2fde : c8 __ __ INY
2fdf : aa __ __ TAX
2fe0 : 20 00 00 JSR $0000 
2fe3 : 4c 55 08 JMP $0855 ; (startup + 84)
